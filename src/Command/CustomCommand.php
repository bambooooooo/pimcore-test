<?php

declare(strict_types=1);

namespace App\Command;

use App\Model\DataObject\User;
use Carbon\Carbon;
use Pimcore\Console\AbstractCommand;
use Pimcore\Model\DataObject;
use Pimcore\Model\Asset;
use Pimcore\Model\DataObject\Data\QuantityValue;
use Pimcore\Model\DataObject\Group;
use Pimcore\Model\DataObject\Order;
use Pimcore\Model\DataObject\Package;
use Pimcore\Model\DataObject\Product;
use Pimcore\Model\DataObject\ProductSet;
use Pimcore\Model\DataObject\QuantityValue\Unit;
use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\HttpClient\HttpClient;

#[AsCommand(
    name: 'bamboo:dev',
    description: 'Temp command to import data'
)]
class CustomCommand extends AbstractCommand
{
    public function __construct()
    {
        parent::__construct();

        $this->httpClient = HttpClient::create();

        $this->groupId = [];
        $this->keyId = [];
    }

    protected function configure(): void
    {
        $this->addArgument("classification_store_id", InputArgument::REQUIRED, "ClassificationStore(Products) Id?");

        $this->addOption("group", "g", InputOption::VALUE_NONE, "Add groups (collections)");
        $this->addOption("cartoon", "c", InputOption::VALUE_NONE, "Add cartoons (packages)");
        $this->addOption("product", "p", InputOption::VALUE_NONE, "Add products");
        $this->addOption("suspended_products", "x", InputOption::VALUE_NONE, "Add suspended products");
        $this->addOption("sets", "s", InputOption::VALUE_NONE, "Add sets");
        $this->addOption("orders", "o", InputOption::VALUE_NONE, "Add orders");
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $csId = (int)$input->getArgument("classification_store_id");
        if(!\Pimcore\Model\DataObject\Classificationstore\StoreConfig::getById($csId))
        {
            $this->writeError("ClassificationStore(Products Id={$csId}) not found");
            return self::FAILURE;
        }

        $COLLECTION_FOLDER_PATH = "/GRUPY/KOLEKCJE";

        $this->getClassificationStore($csId);

        if($input->getOption("group")) {
            $this->importCollections($COLLECTION_FOLDER_PATH, "/GRUPY");
        }

        if($input->getOption("cartoon")) {
            $this->importPackages("/PACZKI");
        }

        if($input->getOption("product")) {
            $this->getProducts("/PRODUKTY", "/PRODUKTY", $COLLECTION_FOLDER_PATH);
        }

        if($input->getOption("suspended_products")) {
            $this->getSuspendedProducts("/PRODUKTY NIEWDROŻONE", "/PRODUKTY", $COLLECTION_FOLDER_PATH);
        }

        if($input->getOption("sets")) {
            $this->getSets("/ZESTAWY", "/ZESTAWY", $COLLECTION_FOLDER_PATH);
        }

        if($input->getOption("orders")) {
            $this->getOrders("/ZLECENIA/PRODUKCJA", "/ZLECENIA", "/USERS");
        }
        return Command::SUCCESS;
    }

    private function getClassificationStore($csId, $verbose = true): void
    {
        $groupDef = [];
        if(1==1)
        {
            $groupDef[13] = 'Ściana tylna';
            $groupDef[14] = 'Korpus';
            $groupDef[15] = 'Klapy';
            $groupDef[16] = 'Drzwi';
            $groupDef[17] = 'Szuflady';
            $groupDef[18] = 'Fronty';
            $groupDef[19] = 'Fronty przeszklone';
            $groupDef[20] = 'Półka szklana';
            $groupDef[21] = 'Uchwyty';
            $groupDef[22] = 'Zawiasy';
            $groupDef[23] = 'Oświetlenie';
            $groupDef[24] = 'Fronty z lustrem';
            $groupDef[25] = 'Porty (złącza)';
            $groupDef[26] = 'Półka pełna';
            $groupDef[27] = 'Gniazdko';
            $groupDef[28] = 'Blat';
            $groupDef[29] = 'Kominek elektryczny';
            $groupDef[30] = 'Nogi';
            $groupDef[31] = 'Soundbar';
            $groupDef[34] = 'Montaż';
            $groupDef[35] = 'Sprzęty RTV';
            $groupDef[36] = 'BlatOtwór';
            $groupDef[37] = 'Ogólne - meble';
            $groupDef[38] = 'Ślizgacz (noga)';
            $groupDef[39] = 'Stelaż (noga)';
            $groupDef[40] = 'Baterie';
            $groupDef[41] = 'Umywalki';
        }

        $keyDefs = [];
        if(1==1)
        {
            $keyDefs['6'] = ['name' => 'DoorCount', 'type' => 'numeric', 'def' => '{"name":"DoorCount","datatype":"data","fieldtype":"numeric","title":"Drzwi - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-23058-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-1914-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":true,"unsigned":true,"minValue":null,"maxValue":null,"displayfield-1712-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-3349-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['7'] = ['name' => 'ClapCount', 'type' => 'numeric', 'def' => '{"name":"ClapCount","datatype":"data","fieldtype":"numeric","title":"Klapy - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-23084-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-1880-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":true,"unsigned":true,"minValue":null,"maxValue":null,"displayfield-1678-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-3065-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['8'] = ['name' => 'DrawerCount', 'type' => 'numeric', 'def' => '{"name":"DrawerCount","datatype":"data","fieldtype":"numeric","title":"Szuflady - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-23110-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-17041-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1791-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1486-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['9'] = ['name' => 'BackMount', 'type' => 'select', 'def' => '{"name":"BackMount","datatype":"data","fieldtype":"select","title":"Ściana tylna - montaż","tooltip":"nabijana / wpuszczana","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23136-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"nabijana","noLabel":"wpuszczana","emptyLabel":"","options":[{"key":"wpuszczana","value":"wpuszczana"},{"key":"nabijana","value":"nabijana"}],"displayfield-23160-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-15213-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-2048-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-2074-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1962-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1957-inputEl":null,"displayfield-1527-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1858-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1853-inputEl":null,"displayfield-3710-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3705-inputEl":null,"displayfield-6827-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6822-inputEl":null,"displayfield-14270-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14265-inputEl":null,"displayfield-14313-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14308-inputEl":null}'];
            $keyDefs['10'] = ['name' => 'BodyMaterial', 'type' => 'select', 'def' => '{"name":"BodyMaterial","datatype":"data","fieldtype":"select","title":"Korpus - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"płyta wiórowa","defaultValueGenerator":"","width":"","displayfield-23188-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"płyta wiórowa","value":"płyta wiórowa"},{"key":"płyta mdf","value":"płyta mdf"}],"displayfield-1373-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardType","combobox-1368-inputEl":null,"displayfield-1919-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1914-inputEl":null,"displayfield-2675-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2670-inputEl":null,"displayfield-1853-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1848-inputEl":null,"displayfield-2962-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2957-inputEl":null,"displayfield-4323-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4318-inputEl":null,"displayfield-5537-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5532-inputEl":null,"displayfield-2906-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2901-inputEl":"ChipboardType","displayfield-2951-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2946-inputEl":"ChipboardType"}'];
            $keyDefs['11'] = ['name' => 'BodyThickness', 'type' => 'select', 'def' => '{"name":"BodyThickness","datatype":"data","fieldtype":"select","title":"Korpus - grubość materiału","options":[{"key":"16","value":"16"},{"key":"18","value":"18"}],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-2271-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"16","defaultValueGenerator":"","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-2266-inputEl":null,"displayfield-2632-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2627-inputEl":null,"displayfield-2919-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2914-inputEl":null,"displayfield-5580-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5575-inputEl":null,"displayfield-5623-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5618-inputEl":null,"displayfield-5933-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5928-inputEl":null}'];
            $keyDefs['12'] = ['name' => 'BodyFrontMaterial', 'type' => 'select', 'def' => '{"name":"BodyFrontMaterial","datatype":"data","fieldtype":"select","title":"Korpus - wykończenie z zewnątrz materiał","options":[],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-1417-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"Laminat","defaultValueGenerator":"","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardFinish","combobox-1412-inputEl":"ChipboardFinish","displayfield-4237-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4232-inputEl":"ChipboardFinish","displayfield-5226-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5221-inputEl":"ChipboardFinish"}'];
            $keyDefs['13'] = ['name' => 'BodyBackMaterial', 'type' => 'select', 'def' => '{"name":"BodyBackMaterial","datatype":"data","fieldtype":"select","title":"Korpus - materiał na wykończenie od wewnątrz","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"Laminat","defaultValueGenerator":"","width":"","displayfield-23293-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"Laminat","value":"Laminat"},{"key":"Folia PCV","value":"Folia PCV"}],"displayfield-1758-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardFinish","combobox-1753-inputEl":null,"displayfield-1802-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1797-inputEl":null,"displayfield-1888-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1883-inputEl":null,"displayfield-1373-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1368-inputEl":"ChipboardFinish","displayfield-3624-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3619-inputEl":"ChipboardFinish","displayfield-3943-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3938-inputEl":"ChipboardFinish","displayfield-5183-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5178-inputEl":"ChipboardFinish","displayfield-6088-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6083-inputEl":"ChipboardFinish"}'];
            $keyDefs['14'] = ['name' => 'BodyBorderType', 'type' => 'select', 'def' => '{"name":"BodyBorderType","datatype":"data","fieldtype":"select","title":"Korpus obrzeże - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"PCV","defaultValueGenerator":"","width":"","displayfield-23345-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"PCV","value":"PCV"},{"key":"ABS","value":"ABS"},{"key":"Papier","value":"Papier"}],"displayfield-1566-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardBorderFinish","combobox-1561-inputEl":null,"displayfield-12624-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-12619-inputEl":null,"displayfield-13056-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-13051-inputEl":"ChipboardBorderFinish","displayfield-2102-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2097-inputEl":"ChipboardBorderFinish"}'];
            $keyDefs['15'] = ['name' => 'BodyBorderThickness', 'type' => 'select', 'def' => '{"name":"BodyBorderThickness","datatype":"data","fieldtype":"select","title":"Korpus obrzeże - grubość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"0.6","defaultValueGenerator":"","width":"","displayfield-23371-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"0.5","value":"0.5"},{"key":"0.4","value":"0.4"},{"key":"0.6","value":"0.6"},{"key":"0.8","value":"0.8"},{"key":"1.0","value":"1.0"},{"key":"1.3","value":"1.3"},{"key":"2.0","value":"2.0"}],"displayfield-1522-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardBorderThickness","combobox-1517-inputEl":null,"displayfield-1610-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1605-inputEl":null,"displayfield-1387-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1382-inputEl":"ChipboardBorderThickness","displayfield-2118-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2113-inputEl":"ChipboardBorderThickness"}'];
            $keyDefs['16'] = ['name' => 'TopMaterial', 'type' => 'select', 'def' => '{"name":"TopMaterial","datatype":"data","fieldtype":"select","title":"Blat - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23397-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"płyta wiórowa","value":"płyta wiórowa"},{"key":"płyta mdf","value":"płyta mdf"}],"displayfield-17508-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-17503-inputEl":null}'];
            $keyDefs['17'] = ['name' => 'TopThickness', 'type' => 'select', 'def' => '{"name":"TopThickness","datatype":"data","fieldtype":"select","title":"Blat - grubość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23423-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"16","value":"16"},{"key":"18","value":"18"},{"key":"19","value":"19"},{"key":"22","value":"22"}],"displayfield-17552-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-17547-inputEl":null,"displayfield-5097-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5092-inputEl":null}'];
            $keyDefs['18'] = ['name' => 'TopBorderCount', 'type' => 'numeric', 'def' => '{"name":"TopBorderCount","datatype":"data","fieldtype":"numeric","title":"Blat - z ilu stron obrzeże","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-23449-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-17341-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":true,"unsigned":true,"minValue":0,"maxValue":4}'];
            $keyDefs['19'] = ['name' => 'TopBorder', 'type' => 'select', 'def' => '{"name":"TopBorder","datatype":"data","fieldtype":"select","title":"Blat - typ obrzeża","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23475-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"PCV","value":"PCV"},{"key":"ABS","value":"ABS"},{"key":"Papier","value":"Papier"}],"displayfield-17437-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-17432-inputEl":null,"displayfield-5002-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4997-inputEl":null}'];
            $keyDefs['20'] = ['name' => 'TopBorderThickness', 'type' => 'select', 'def' => '{"name":"TopBorderThickness","datatype":"data","fieldtype":"select","title":"Blat - grubość obrzeża","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23501-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-17393-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardBorderThickness","combobox-17388-inputEl":"ChipboardBorderThickness"}'];
            $keyDefs['21'] = ['name' => 'BackMaterial', 'type' => 'multiselect', 'def' => '{"name":"BackMaterial","datatype":"data","fieldtype":"multiselect","title":"Ściana tylna - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"HDF","defaultValueGenerator":"","width":"","displayfield-23553-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"HDF","value":"HDF"},{"key":"płyta wiórowa","value":"płyta wiórowa"}],"displayfield-15188-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-15183-inputEl":null,"displayfield-2248-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2243-inputEl":null,"displayfield-3753-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3748-inputEl":null,"displayfield-6784-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6779-inputEl":null,"displayfield-1459-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1454-inputEl":null,"displayfield-1457-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","maxItems":null,"renderType":"tags","combobox-1452-inputEl":null}'];
            $keyDefs['22'] = ['name' => 'BackThickness', 'type' => 'select', 'def' => '{"name":"BackThickness","datatype":"data","fieldtype":"select","title":"Ściana tylna - grubość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"3","defaultValueGenerator":"","width":"","displayfield-23579-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"3","value":"3"},{"key":"16","value":"16"},{"key":"18","value":"18"}],"displayfield-15144-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-15139-inputEl":null,"displayfield-3538-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3533-inputEl":null,"displayfield-6870-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6865-inputEl":null,"displayfield-1774-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1769-inputEl":null}'];
            $keyDefs['23'] = ['name' => 'ShelveMaterialType', 'type' => 'select', 'def' => '{"name":"ShelveMaterialType","datatype":"data","fieldtype":"select","title":"Półka pełna - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"płyta laminowana","defaultValueGenerator":"","width":"","displayfield-23605-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"płyta laminowana","value":"płyta laminowana"}],"displayfield-17231-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-17226-inputEl":null,"displayfield-17275-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-17270-inputEl":null,"displayfield-5890-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5885-inputEl":null}'];
            $keyDefs['24'] = ['name' => 'ShelveThickness', 'type' => 'select', 'def' => '{"name":"ShelveThickness","datatype":"data","fieldtype":"select","title":"Półka pełna - grubość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23631-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"16","value":"16"},{"key":"18","value":"18"}],"displayfield-17161-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-17156-inputEl":null,"displayfield-4933-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4928-inputEl":null}'];
            $keyDefs['25'] = ['name' => 'ShelveBorderCount', 'type' => 'numeric', 'def' => '{"name":"ShelveBorderCount","datatype":"data","fieldtype":"numeric","title":"Półka pełna - z ilu stron obrzeże","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-23657-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16979-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":true,"unsigned":true,"minValue":0,"maxValue":4,"displayfield-6146-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['26'] = ['name' => 'ShelveMaxLoad', 'type' => 'quantityValue', 'def' => '{"name":"ShelveMaxLoad","datatype":"data","fieldtype":"quantityValue","title":"Półka pełna - maksymalne obciążenie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":5,"defaultValueGenerator":"","width":"","displayfield-23683-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-17301-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"kg","validUnits":["kg"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['27'] = ['name' => 'ShelveCount', 'type' => 'input', 'def' => '{"name":"ShelveCount","datatype":"data","fieldtype":"input","title":"Półka pełna - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23709-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-17067-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1543-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['28'] = ['name' => 'GlassShelveType', 'type' => 'input', 'def' => '{"name":"GlassShelveType","datatype":"data","fieldtype":"input","title":"Półka szklana - rodzaj szkła","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23735-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false}'];
            $keyDefs['29'] = ['name' => 'GlassShelveThickness', 'type' => 'select', 'def' => '{"name":"GlassShelveThickness","datatype":"data","fieldtype":"select","title":"Półka szklana - grubość szkła","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"5","defaultValueGenerator":"","width":"","displayfield-23761-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"5","value":"5"},{"key":"6","value":"6"}],"displayfield-13753-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-13748-inputEl":null}'];
            $keyDefs['30'] = ['name' => 'GlassShelveMaxLoad', 'type' => 'quantityValue', 'def' => '{"name":"GlassShelveMaxLoad","datatype":"data","fieldtype":"quantityValue","title":"Półka szklana - maksymalne obciążenie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":3,"defaultValueGenerator":"","width":"","displayfield-23787-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-13669-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"kg","validUnits":["kg"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['31'] = ['name' => 'GlassShelveCount', 'type' => 'numeric', 'def' => '{"name":"GlassShelveCount","datatype":"data","fieldtype":"numeric","title":"Półka szklana - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-23813-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-13591-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['32'] = ['name' => 'FrontMaterial', 'type' => 'select', 'def' => '{"name":"FrontMaterial","datatype":"data","fieldtype":"select","title":"Fronty - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"płyta mdf","defaultValueGenerator":"","width":"","displayfield-23839-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"płyta mdf","value":"płyta mdf"},{"key":"płyta wiórowa","value":"płyta wiórowa"}],"displayfield-13310-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-13305-inputEl":null,"displayfield-1865-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1860-inputEl":null,"displayfield-4838-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4833-inputEl":null,"displayfield-5322-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5317-inputEl":null,"displayfield-5365-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5360-inputEl":null}'];
            $keyDefs['33'] = ['name' => 'FrontThickness', 'type' => 'select', 'def' => '{"name":"FrontThickness","datatype":"data","fieldtype":"select","title":"Fronty - grubość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"18","defaultValueGenerator":"","width":"","displayfield-23865-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"16","value":"16"},{"key":"18","value":"18"},{"key":"19","value":"19"}],"displayfield-13171-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-13166-inputEl":null,"displayfield-1822-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1817-inputEl":null,"displayfield-5408-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5403-inputEl":null,"displayfield-6045-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6040-inputEl":null}'];
            $keyDefs['34'] = ['name' => 'FrontBorderType', 'type' => 'select', 'def' => '{"name":"FrontBorderType","datatype":"data","fieldtype":"select","title":"Fronty obrzeże - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23891-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-12539-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[],"displayfield-12753-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardBorderFinish","combobox-12748-inputEl":"ChipboardFinish","displayfield-13100-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-13095-inputEl":"ChipboardBorderFinish","displayfield-1779-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1774-inputEl":"ChipboardBorderFinish","displayfield-4450-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4445-inputEl":"ChipboardBorderFinish"}'];
            $keyDefs['35'] = ['name' => 'FrontBorderThickness', 'type' => 'select', 'def' => '{"name":"FrontBorderThickness","datatype":"data","fieldtype":"select","title":"Fronty obrzeże - grubość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23917-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1966-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardBorderThickness","combobox-1961-inputEl":"ChipboardThickness","displayfield-1474-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1469-inputEl":"ChipboardBorderThickness","displayfield-1736-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1731-inputEl":"ChipboardBorderThickness"}'];
            $keyDefs['36'] = ['name' => 'GlassFrontThickness', 'type' => 'select', 'def' => '{"name":"GlassFrontThickness","datatype":"data","fieldtype":"select","title":"Front przeszklony - grubość szkła","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"4","defaultValueGenerator":"","width":"","displayfield-23969-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"4","value":"4"},{"key":"5","value":"5"}],"displayfield-13354-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-13349-inputEl":null,"displayfield-4973-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4968-inputEl":null}'];
            $keyDefs['37'] = ['name' => 'GlassFrontHarden', 'type' => 'booleanSelect', 'def' => '{"name":"GlassFrontHarden","datatype":"data","fieldtype":"booleanSelect","title":"Front przeszklony - hartowanie szkła","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-23943-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-13467-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-4843-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['40'] = ['name' => 'MirrorFrontWidth', 'type' => 'quantityValue', 'def' => '{"name":"MirrorFrontWidth","datatype":"data","fieldtype":"quantityValue","title":"Front z lustrem - szerokość lustra","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-24047-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-1545-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":[],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['41'] = ['name' => 'MirrorFrontHeight', 'type' => 'quantityValue', 'def' => '{"name":"MirrorFrontHeight","datatype":"data","fieldtype":"quantityValue","title":"Front z lustrem - wysokość lustra","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-24073-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-1505-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":[],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['42'] = ['name' => 'HingeType', 'type' => 'select', 'def' => '{"name":"HingeType","datatype":"data","fieldtype":"select","title":"Zawias - rodzaj","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"puszkowy","defaultValueGenerator":"","width":"","displayfield-24099-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"puszkowy","value":"puszkowy"}],"displayfield-14747-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-14742-inputEl":null,"displayfield-15302-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-15297-inputEl":null}'];
            $keyDefs['43'] = ['name' => 'DoorOpeningSystem', 'type' => 'select', 'def' => '{"name":"DoorOpeningSystem","datatype":"data","fieldtype":"select","title":"Drzwi - system otwierania","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-24125-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-14479-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"push to open","value":"push to open"},{"key":"uchwyt frezowany","value":"uchwyt frezowany"},{"key":"uchwyt","value":"uchwyt"},{"key":"bezuchwytowe (drzwiczki wystają nad blat)","value":"bezuchwytowe (drzwiczki wystają nad blat)"},{"key":"przesuwny","value":"przesuwny"}],"displayfield-14521-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-14516-inputEl":null,"displayfield-14564-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14559-inputEl":null,"displayfield-14607-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14602-inputEl":null,"displayfield-15258-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-15253-inputEl":null,"displayfield-1764-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1759-inputEl":null}'];
            $keyDefs['44'] = ['name' => 'DrawerGuideType', 'type' => 'select', 'def' => '{"name":"DrawerGuideType","datatype":"data","fieldtype":"select","title":"Szuflady prowadnice - typ","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-24177-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-17093-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1843-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"kulkowa","value":"kulkowa"},{"key":"rolkowa","value":"rolkowa"},{"key":"dolnego montażu","value":"dolnego montażu"}],"displayfield-1611-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1606-inputEl":null}'];
            $keyDefs['45'] = ['name' => 'DrawerMaterial', 'type' => 'select', 'def' => '{"name":"DrawerMaterial","datatype":"data","fieldtype":"select","title":"Szuflady wstęga - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"płyta wiórowa","defaultValueGenerator":"","width":"","displayfield-24203-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-24230-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-17119-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1869-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"płyta wiórowa","value":"płyta wiórowa"}],"displayfield-1817-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1812-inputEl":null,"displayfield-4200-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4195-inputEl":null,"displayfield-5761-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5756-inputEl":null}'];
            $keyDefs['46'] = ['name' => 'DrawerBottomMaterial', 'type' => 'select', 'def' => '{"name":"DrawerBottomMaterial","datatype":"data","fieldtype":"select","title":"Szuflady dno - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-24256-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-17015-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1817-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"hdf","value":"hdf"},{"key":"płyta wiórowa","value":"płyta wiórowa"}],"displayfield-1932-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1927-inputEl":null,"displayfield-5718-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5713-inputEl":null}'];
            $keyDefs['47'] = ['name' => 'LightType', 'type' => 'select', 'def' => '{"name":"LightType","datatype":"data","fieldtype":"select","title":"Oświetlenie - rodzaj","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"LED","defaultValueGenerator":"","width":"","displayfield-24282-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"LED","value":"LED"}],"displayfield-15389-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-15384-inputEl":null,"displayfield-15477-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-15472-inputEl":null,"displayfield-15521-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-15523-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"list","combobox-15516-inputEl":null,"displayfield-15569-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-15571-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-15564-inputEl":null,"displayfield-15641-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-15643-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-15636-inputEl":null,"displayfield-15698-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-15693-inputEl":null,"displayfield-6501-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6496-inputEl":null}'];
            $keyDefs['48'] = ['name' => 'LightEnergyClass', 'type' => 'select', 'def' => '{"name":"LightEnergyClass","datatype":"data","fieldtype":"select","title":"Oświetlenie - klasa energetyczna","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-24308-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"A+++","value":"A+++"},{"key":"A++","value":"A++"},{"key":"A+","value":"A+"},{"key":"A","value":"A"},{"key":"B","value":"B"},{"key":"C","value":"C"},{"key":"D","value":"D"},{"key":"E","value":"E"},{"key":"F","value":"F"},{"key":"G","value":"G"}],"displayfield-15432-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-15427-inputEl":null,"displayfield-6198-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6193-inputEl":null,"displayfield-6241-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6236-inputEl":null,"displayfield-6284-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6279-inputEl":null}'];
            $keyDefs['49'] = ['name' => 'BackColor', 'type' => 'multiselect', 'def' => '{"name":"BackColor","datatype":"data","fieldtype":"multiselect","title":"Ściana tylna - kolor od przodu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-15270-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-15494-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-15489-inputEl":"Color","displayfield-2188-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2183-inputEl":"Color","displayfield-3986-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3981-inputEl":"Color","displayfield-1411-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-1413-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-1406-inputEl":"Color","displayfield-1503-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1505-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1498-inputEl":"Color"}'];
            $keyDefs['50'] = ['name' => 'BackBackColor', 'type' => 'multiselect', 'def' => '{"name":"BackBackColor","datatype":"data","fieldtype":"multiselect","title":"Ściana tylna - kolor od tyłu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-15242-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-15296-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[],"displayfield-15338-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-15333-inputEl":null,"displayfield-15424-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-15419-inputEl":"Color","displayfield-2145-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2140-inputEl":"Color","displayfield-1413-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-1415-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-1408-inputEl":"Color","displayfield-1549-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1551-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1544-inputEl":"Color"}'];
            $keyDefs['51'] = ['name' => 'BodyFrontColor', 'type' => 'multiselect', 'def' => '{"name":"BodyFrontColor","datatype":"data","fieldtype":"multiselect","title":"Korpus materiał - kolor od przodu","options":[],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-1636-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-1631-inputEl":"Color","displayfield-1767-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1762-inputEl":"Color","displayfield-3667-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3662-inputEl":"Color","displayfield-1748-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-1750-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-1743-inputEl":"Color","displayfield-2427-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-2429-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2422-inputEl":"Color"}'];
            $keyDefs['52'] = ['name' => 'BodyBackColor', 'type' => 'multiselect', 'def' => '{"name":"BodyBackColor","datatype":"data","fieldtype":"multiselect","title":"Korpus - kolor od tyłu","options":[],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-1592-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-1587-inputEl":"Color","displayfield-1724-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1719-inputEl":"Color","displayfield-3581-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3576-inputEl":"Color","displayfield-6157-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6152-inputEl":"Color","displayfield-2036-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-2038-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-2031-inputEl":"Color","displayfield-2082-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-2084-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2077-inputEl":"Color"}'];
            $keyDefs['53'] = ['name' => 'GlassFrontColor', 'type' => 'input', 'def' => '{"name":"GlassFrontColor","datatype":"data","fieldtype":"input","title":"Front przeszklony - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-13495-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-13981-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['54'] = ['name' => 'GlassFrontPattern', 'type' => 'select', 'def' => '{"name":"GlassFrontPattern","datatype":"data","fieldtype":"select","title":"Front przeszkolny - wzór","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"gładkie","defaultValueGenerator":"","width":"","displayfield-13521-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"gładkie","value":"gładkie"},{"key":"flutes","value":"flutes"},{"key":"estriado","value":"estriado"}],"displayfield-13563-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-13558-inputEl":null,"displayfield-13643-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-13638-inputEl":null,"displayfield-14124-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14119-inputEl":null}'];
            $keyDefs['55'] = ['name' => 'GlassFrontBorderFinish', 'type' => 'select', 'def' => '{"name":"GlassFrontBorderFinish","datatype":"data","fieldtype":"select","title":"Front przeszklony - wykończenie krawędzi","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"polerowana","defaultValueGenerator":"","width":"","displayfield-13781-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"polerowana","value":"polerowana"},{"key":"szlifowana","value":"szlifowana"},{"key":"brak","value":"brak"}],"displayfield-13910-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-13905-inputEl":null,"displayfield-13954-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-13949-inputEl":null}'];
            $keyDefs['56'] = ['name' => 'GlassFrontColorType', 'type' => 'select', 'def' => '{"name":"GlassFrontColorType","datatype":"data","fieldtype":"select","title":"Front przeszklony - rodzaj szkła","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"przeźroczyste","defaultValueGenerator":"","width":"","displayfield-14039-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"przeźroczyste","value":"przeźroczyste"},{"key":"lacobel","value":"lacobel"},{"key":"przyciemniane","value":"przyciemniane"},{"key":"matowe","value":"matowe"}],"displayfield-14081-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-14076-inputEl":null,"displayfield-14167-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14162-inputEl":null,"displayfield-14211-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14206-inputEl":null}'];
            $keyDefs['57'] = ['name' => 'GlassFrontDarken', 'type' => 'select', 'def' => '{"name":"GlassFrontDarken","datatype":"data","fieldtype":"select","title":"Front przeszklony - stopień przyciemnienia","options":[{"key":"wysokie (0-20%)","value":"wysokie (0-20%)"},{"key":"średnie (20-50%)","value":"średnie (20-50%)"},{"key":"niskie (50-80%)","value":"niskie (50-80%)"},{"key":"przezroczyste (80-100%)","value":"przezroczyste (80-100%)"}],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-14256-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-14251-inputEl":null,"displayfield-14300-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14295-inputEl":null,"displayfield-4751-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4746-inputEl":null,"displayfield-4794-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4789-inputEl":null}'];
            $keyDefs['58'] = ['name' => 'HandleType', 'type' => 'select', 'def' => '{"name":"HandleType","datatype":"data","fieldtype":"select","title":"Uchwyty - rodzaj","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-14636-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"gałkowe","value":"gałkowe"},{"key":"krawędziowe","value":"krawędziowe"},{"key":"liniowe (podłużne)","value":"liniowe (podłużne)"},{"key":"sznurkowe","value":"sznurkowe"}],"displayfield-14704-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-14699-inputEl":null,"displayfield-14790-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-14785-inputEl":null}'];
            $keyDefs['59'] = ['name' => 'HandleMaterial', 'type' => 'select', 'def' => '{"name":"HandleMaterial","datatype":"data","fieldtype":"select","title":"Uchwyty - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-14819-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"plastik","value":"plastik"},{"key":"aluminium","value":"aluminium"},{"key":"metal","value":"metal"},{"key":"stal szlachetna","value":"stal szlachetna"},{"key":"drewno","value":"drewno"},{"key":"skóra","value":"skóra"},{"key":"szkło","value":"szkło"},{"key":"porcelana","value":"porcelana"}],"displayfield-14861-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-14856-inputEl":null,"displayfield-5212-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5207-inputEl":null,"displayfield-5451-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5446-inputEl":null}'];
            $keyDefs['60'] = ['name' => 'HandleColor', 'type' => 'multiselect', 'def' => '{"name":"HandleColor","datatype":"data","fieldtype":"multiselect","title":"Uchwyty - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-15030-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-5082-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-5077-inputEl":"Color","displayfield-5126-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5121-inputEl":"Color","displayfield-2114-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-2116-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-2109-inputEl":"Color"}'];
            $keyDefs['61'] = ['name' => 'BodyFrontFinish', 'type' => 'select', 'def' => '{"name":"BodyFrontFinish","datatype":"data","fieldtype":"select","title":"Korpus materiał wykończenie od przodu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"mat","defaultValueGenerator":"","width":"","displayfield-14890-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"połysk","value":"połysk"},{"key":"mat","value":"mat"}],"displayfield-15002-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-14997-inputEl":null,"displayfield-4280-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4275-inputEl":null,"displayfield-5140-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5135-inputEl":null,"displayfield-7407-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-7402-inputEl":null,"displayfield-10929-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-10924-inputEl":"MattGloss"}'];
            $keyDefs['62'] = ['name' => 'BodyBackFinish', 'type' => 'select', 'def' => '{"name":"BodyBackFinish","datatype":"data","fieldtype":"select","title":"Korpus materiał wykończenie od tyłu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"mat","defaultValueGenerator":"","width":"","displayfield-14916-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"połysk","value":"połysk"},{"key":"mat","value":"mat"}],"displayfield-14958-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-14953-inputEl":null,"displayfield-1927-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1922-inputEl":null,"displayfield-1971-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1966-inputEl":null,"displayfield-3814-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3809-inputEl":null,"displayfield-3900-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3895-inputEl":null,"displayfield-4073-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4068-inputEl":null,"displayfield-4116-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4111-inputEl":null,"displayfield-10973-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-10968-inputEl":"MattGloss","displayfield-2273-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2268-inputEl":"MattGloss"}'];
            $keyDefs['63'] = ['name' => 'HandleSize', 'type' => 'quantityValue', 'def' => '{"name":"HandleSize","datatype":"data","fieldtype":"quantityValue","title":"Uchwyty - rozmiar","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-15056-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-15080-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-5237-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['64'] = ['name' => 'HingeSoftClose', 'type' => 'booleanSelect', 'def' => '{"name":"HingeSoftClose","datatype":"data","fieldtype":"booleanSelect","title":"Zawias - cichy domyk","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-15191-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-15214-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5361-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5411-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-2830-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['65'] = ['name' => 'LightColor', 'type' => 'select', 'def' => '{"name":"LightColor","datatype":"data","fieldtype":"select","title":"Oświetlenie - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-15599-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-15742-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-15737-inputEl":"Color","displayfield-5992-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5987-inputEl":"Color"}'];
            $keyDefs['66'] = ['name' => 'LightLumen', 'type' => 'quantityValue', 'def' => '{"name":"LightLumen","datatype":"data","fieldtype":"quantityValue","title":"Oświetlenie - ilość lumenów na metr kwadratowy","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-15770-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-15794-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"lm","validUnits":["lm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-15892-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-15998-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['67'] = ['name' => 'LightTemperature', 'type' => 'quantityValue', 'def' => '{"name":"LightTemperature","datatype":"data","fieldtype":"quantityValue","title":"Oświetlenie - temperatura barwy w kelwinach","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-15934-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-15958-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"K","validUnits":["K"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-16103-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['68'] = ['name' => 'LightPowerSupply', 'type' => 'quantityValue', 'def' => '{"name":"LightPowerSupply","datatype":"data","fieldtype":"quantityValue","title":"Oświetlenie - moc zasilacza","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16039-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-16063-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"W","validUnits":["W"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['69'] = ['name' => 'LightMontage', 'type' => 'multiselect', 'def' => '{"name":"LightMontage","datatype":"data","fieldtype":"multiselect","title":"Oświetlenie - sposób montażu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-16203-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"przyklejane","value":"przyklejane"},{"key":"wciskane","value":"wciskane"},{"key":"przykręcane","value":"przykręcane"}],"displayfield-16245-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-16240-inputEl":null,"displayfield-16289-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-16291-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"list","combobox-16284-inputEl":null,"displayfield-6373-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-6375-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6368-inputEl":null}'];
            $keyDefs['70'] = ['name' => 'PowerSocketType', 'type' => 'select', 'def' => '{"name":"PowerSocketType","datatype":"data","fieldtype":"select","title":"Rodzaj gniazda sieciowego","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"C","defaultValueGenerator":"","width":"","displayfield-16431-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"A","value":"A"},{"key":"B","value":"B"},{"key":"C - Europa, Ameryka Południowa, Azja","value":"C"},{"key":"D","value":"D"},{"key":"E","value":"E"},{"key":"F","value":"F"},{"key":"G - Wielka brytania, Irlandia, Malezja, Signapur","value":"G"},{"key":"H","value":"H"},{"key":"I","value":"I"},{"key":"J","value":"J"},{"key":"L","value":"L"},{"key":"M","value":"M"},{"key":"N","value":"N"}],"displayfield-16473-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-16468-inputEl":null,"displayfield-6078-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6073-inputEl":null,"displayfield-6121-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6116-inputEl":null}'];
            $keyDefs['71'] = ['name' => 'PowerSocketCount', 'type' => 'numeric', 'def' => '{"name":"PowerSocketCount","datatype":"data","fieldtype":"numeric","title":"Ilość gniazd sieciowych","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16320-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16344-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['72'] = ['name' => 'PowerSocketSwitch', 'type' => 'booleanSelect', 'def' => '{"name":"PowerSocketSwitch","datatype":"data","fieldtype":"booleanSelect","title":"Czy posiada wyłącznik","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-16380-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-16403-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['73'] = ['name' => 'PortHDMICount', 'type' => 'numeric', 'def' => '{"name":"PortHDMICount","datatype":"data","fieldtype":"numeric","title":"Port HDMI - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16553-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16697-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['74'] = ['name' => 'PortUSB30Count', 'type' => 'numeric', 'def' => '{"name":"PortUSB30Count","datatype":"data","fieldtype":"numeric","title":"Port USB 3.0 - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16605-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16765-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['75'] = ['name' => 'PortUSB20Count', 'type' => 'numeric', 'def' => '{"name":"PortUSB20Count","datatype":"data","fieldtype":"numeric","title":"Port USB 2.0 - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16579-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16731-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['76'] = ['name' => 'PortARCCount', 'type' => 'numeric', 'def' => '{"name":"PortARCCount","datatype":"data","fieldtype":"numeric","title":"Port ARC - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16501-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16629-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['77'] = ['name' => 'PortEthenrnetCount', 'type' => 'numeric', 'def' => '{"name":"PortEthenrnetCount","datatype":"data","fieldtype":"numeric","title":"Port Ethernet - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16527-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16663-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['78'] = ['name' => 'PortJackCount', 'type' => 'numeric', 'def' => '{"name":"PortJackCount","datatype":"data","fieldtype":"numeric","title":"Port Jack - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16801-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16945-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['79'] = ['name' => 'PortOptCount', 'type' => 'numeric', 'def' => '{"name":"PortOptCount","datatype":"data","fieldtype":"numeric","title":"Port Optyczny - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16853-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16877-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['80'] = ['name' => 'PortMiniJackCount', 'type' => 'numeric', 'def' => '{"name":"PortMiniJackCount","datatype":"data","fieldtype":"numeric","title":"Port MiniJack - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-16827-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-16911-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['81'] = ['name' => 'DrawerBottomColor', 'type' => 'select', 'def' => '{"name":"DrawerBottomColor","datatype":"data","fieldtype":"select","title":"Dno szuflady - kolor od spodu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1986-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1460-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-1455-inputEl":"Color","displayfield-3573-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3568-inputEl":"Color","displayfield-4366-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4361-inputEl":"Color","displayfield-6243-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6238-inputEl":"Color","displayfield-6329-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6324-inputEl":"Color"}'];
            $keyDefs['82'] = ['name' => 'DrawerBottomBackColor', 'type' => 'select', 'def' => '{"name":"DrawerBottomBackColor","datatype":"data","fieldtype":"select","title":"Dno szuflady - kolor od przodu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1960-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1416-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-1411-inputEl":"Color","displayfield-3530-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3525-inputEl":"Color","displayfield-6200-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6195-inputEl":"Color","displayfield-6286-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6281-inputEl":"Color","displayfield-6372-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-6367-inputEl":"Color"}'];
            $keyDefs['83'] = ['name' => 'DrawerGuideManufacturer', 'type' => 'select', 'def' => '{"name":"DrawerGuideManufacturer","datatype":"data","fieldtype":"select","title":"Szuflady prowadnice - producent","options":[{"key":"Haffele","value":"Haffele"},{"key":"GTV","value":"GTV"},{"key":"Hettich","value":"Hettich"}],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-1656-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1651-inputEl":null,"displayfield-4157-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4152-inputEl":null,"displayfield-7043-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-7038-inputEl":null}'];
            $keyDefs['84'] = ['name' => 'DrawerExtensionType', 'type' => 'select', 'def' => '{"name":"DrawerExtensionType","datatype":"data","fieldtype":"select","title":"Szuflady - wysuw","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1686-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"niepełny","value":"niepełny"},{"key":"pełny","value":"pełny"}],"displayfield-1728-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1723-inputEl":null,"displayfield-1772-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1767-inputEl":null}'];
            $keyDefs['85'] = ['name' => 'DrawerThickness', 'type' => 'select', 'def' => '{"name":"DrawerThickness","datatype":"data","fieldtype":"select","title":"Szuflady wstęga - grubość materiału","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"16","defaultValueGenerator":"","width":"","displayfield-1845-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"16","value":"16"},{"key":"18","value":"18"}],"displayfield-1888-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1883-inputEl":null,"displayfield-4243-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4238-inputEl":null,"displayfield-5804-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5799-inputEl":null,"displayfield-5847-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5842-inputEl":null,"displayfield-6002-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5997-inputEl":null}'];
            $keyDefs['86'] = ['name' => 'DrawerWidth', 'type' => 'quantityValue', 'def' => '{"name":"DrawerWidth","datatype":"data","fieldtype":"quantityValue","title":"Szuflady - szerokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-1916-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-2032-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['87'] = ['name' => 'DrawerHeight', 'type' => 'quantityValue', 'def' => '{"name":"DrawerHeight","datatype":"data","fieldtype":"quantityValue","title":"Szuflady - wysokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-1942-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-2072-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['88'] = ['name' => 'DrawerDepth', 'type' => 'quantityValue', 'def' => '{"name":"DrawerDepth","datatype":"data","fieldtype":"quantityValue","title":"Szuflady - głębokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-1968-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-2112-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['89'] = ['name' => 'DrawerOpeningSystem', 'type' => 'select', 'def' => '{"name":"DrawerOpeningSystem","datatype":"data","fieldtype":"select","title":"Szuflady - system otwierania","options":[{"key":"push to open","value":"push to open"},{"key":"uchwyt frezowany","value":"uchwyt frezowany"},{"key":"uchwyt","value":"uchwyt"},{"key":"bezuchwytowe (drzwiczki wystają ponad blat)","value":"bezuchwytowe (drzwiczki wystają ponad blat)"}],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-2265-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-2260-inputEl":null,"displayfield-2309-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2304-inputEl":null,"displayfield-4325-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-4320-inputEl":null}'];
            $keyDefs['90'] = ['name' => 'DrawerHeightSetting', 'type' => 'booleanSelect', 'def' => '{"name":"DrawerHeightSetting","datatype":"data","fieldtype":"booleanSelect","title":"Szuflady - regulacja wysokości","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2336-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-2359-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['91'] = ['name' => 'DrawerMaxLoad', 'type' => 'quantityValue', 'def' => '{"name":"DrawerMaxLoad","datatype":"data","fieldtype":"quantityValue","title":"Szuflady - nośność","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":5,"defaultValueGenerator":"","width":"","displayfield-2387-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-2411-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"kg","validUnits":["kg"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-4268-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['92'] = ['name' => 'DrawerHeightSettingRange', 'type' => 'quantityValue', 'def' => '{"name":"DrawerHeightSettingRange","datatype":"data","fieldtype":"quantityValue","title":"Szuflady - zakres regulacji wysokości","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":3,"defaultValueGenerator":"","width":"","displayfield-2453-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-2574-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-2576-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","minValue":null,"maxValue":null,"increment":null,"decimalPrecision":null,"vertical":false,"unitWidth":"","displayfield-2604-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"integer":false,"unsigned":false,"displayfield-2687-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-3975-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-4014-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['93'] = ['name' => 'ClapMaterial', 'type' => 'select', 'def' => '{"name":"ClapMaterial","datatype":"data","fieldtype":"select","title":"Klapy - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-3088-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-3187-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-3239-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5650-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"płyta mdf","value":"płyta mdf"},{"key":"płyta wiórowa","value":"płyta wiórowa"}],"displayfield-43169-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-43164-inputEl":null}'];
            $keyDefs['94'] = ['name' => 'ClapThickness', 'type' => 'select', 'def' => '{"name":"ClapThickness","datatype":"data","fieldtype":"select","title":"Klapy - grubość materiału","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-3062-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-3213-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5676-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5960-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"16","value":"16"},{"key":"18","value":"18"},{"key":"19","value":"19"}],"displayfield-43215-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-43210-inputEl":null}'];
            $keyDefs['95'] = ['name' => 'ClapOpeningSystem', 'type' => 'select', 'def' => '{"name":"ClapOpeningSystem","datatype":"data","fieldtype":"select","title":"Klapy - system otwierania","options":[{"key":"push to open","value":"push to open"},{"key":"uchwyt frezowany","value":"uchwyt frezowany"},{"key":"uchwyt","value":"uchwyt"},{"key":"bezuchwytowe (klapy wystają ponad blat)","value":"bezuchwytowe (klapy wystają ponad blat)"}],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-2744-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-2739-inputEl":null,"displayfield-3035-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3030-inputEl":null,"displayfield-3324-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3319-inputEl":null}'];
            $keyDefs['96'] = ['name' => 'ClapLimiterType', 'type' => 'select', 'def' => '{"name":"ClapLimiterType","datatype":"data","fieldtype":"select","title":"Klapy - rodzaj siłownika","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"hydrauliczny","defaultValueGenerator":"","width":"","displayfield-2772-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"hydrauliczny","value":"hydrauliczny"},{"key":"nożycowy","value":"nożycowy"}],"displayfield-2814-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-2809-inputEl":null,"displayfield-3160-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3155-inputEl":null}'];
            $keyDefs['97'] = ['name' => 'ClapActuatorForce', 'type' => 'quantityValue', 'def' => '{"name":"ClapActuatorForce","datatype":"data","fieldtype":"quantityValue","title":"Klapy - siła siłownika","tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","unitWidth":"","displayfield-2840-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":null,"defaultUnit":"N","defaultValueGenerator":"","validUnits":["N"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-2938-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-2978-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-3026-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['98'] = ['name' => 'OpenShelveWidth', 'type' => 'quantityValue', 'def' => '{"name":"OpenShelveWidth","datatype":"data","fieldtype":"quantityValue","title":"Wnęka otwarta - szerokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-1918-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-1983-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":[],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-6299-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['99'] = ['name' => 'OpenShelveHeight', 'type' => 'quantityValue', 'def' => '{"name":"OpenShelveHeight","datatype":"data","fieldtype":"quantityValue","title":"Wnęka otwarta - wysokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-1892-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-1943-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":[],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-6260-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['100'] = ['name' => 'LegType', 'type' => 'select', 'def' => '{"name":"LegType","datatype":"data","fieldtype":"select","title":"Nogi - rodzaj","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-5785-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"ślizgacze","value":"ślizgacze"},{"key":"stelaż","value":"stelaż"},{"key":"nogi","value":"nogi"}],"displayfield-7300-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-7295-inputEl":null,"displayfield-7344-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-7339-inputEl":null}'];
            $keyDefs['101'] = ['name' => 'LegColor', 'type' => 'select', 'def' => '{"name":"LegColor","datatype":"data","fieldtype":"select","title":"Nogi - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-5525-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-5567-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-5562-inputEl":"Color","displayfield-5611-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5606-inputEl":"Color"}'];
            $keyDefs['102'] = ['name' => 'LegMaterial', 'type' => 'select', 'def' => '{"name":"LegMaterial","datatype":"data","fieldtype":"select","title":"Nogi - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-5733-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-5759-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"Plastik","value":"Plastik"},{"key":"Metal","value":"Metal"}],"displayfield-7473-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-7468-inputEl":null,"displayfield-5494-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-5489-inputEl":null}'];
            $keyDefs['103'] = ['name' => 'LegHeight', 'type' => 'quantityValue', 'def' => '{"name":"LegHeight","datatype":"data","fieldtype":"quantityValue","title":"Nogi - wysokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-5707-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-5852-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['104'] = ['name' => 'MontageType', 'type' => 'multiselect', 'def' => '{"name":"MontageType","datatype":"data","fieldtype":"multiselect","title":"Montaż - stojący / wiszący","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6574-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-6600-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"stojący","value":"stojący"},{"key":"wiszący","value":"wiszący"}],"displayfield-6642-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-6644-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"list","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-6637-inputEl":null}'];
            $keyDefs['105'] = ['name' => 'DoorMontageSide', 'type' => 'multiselect', 'def' => '{"name":"DoorMontageSide","datatype":"data","fieldtype":"multiselect","title":"Drzwi - z której strony montowane","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6673-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-6699-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"lewostronny","value":"lewostronny"},{"key":"prawostronny","value":"prawostronny"}],"displayfield-6741-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-6743-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"list","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-6736-inputEl":null,"displayfield-9016-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-9018-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-9011-inputEl":null}'];
            $keyDefs['106'] = ['name' => 'EFSize', 'type' => 'quantityValue', 'def' => '{"name":"EFSize","datatype":"data","fieldtype":"quantityValue","title":"Kominek - szerokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-6896-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-7055-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":null,"validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-7094-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['107'] = ['name' => 'EFColor', 'type' => 'select', 'def' => '{"name":"EFColor","datatype":"data","fieldtype":"select","title":"Kominek - kolor wkładu komikowego","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6818-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-6964-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-6959-inputEl":"Color"}'];
            $keyDefs['108'] = ['name' => 'EFHeatPower', 'type' => 'quantityValue', 'def' => '{"name":"EFHeatPower","datatype":"data","fieldtype":"quantityValue","title":"Kominek - moc grzałki","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-6844-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-6990-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"W","validUnits":["W"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['109'] = ['name' => 'EFRemoteController', 'type' => 'booleanSelect', 'def' => '{"name":"EFRemoteController","datatype":"data","fieldtype":"booleanSelect","title":"Kominek - czy posiada sterowanie pilotem","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6870-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-7029-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['110'] = ['name' => 'LegMontageReady', 'type' => 'booleanSelect', 'def' => '{"name":"LegMontageReady","datatype":"data","fieldtype":"booleanSelect","title":"Nogi - czy produkt ma otwory montażowe","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7135-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-7161-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-7184-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-10502-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['111'] = ['name' => 'PillowHandle', 'type' => 'input', 'def' => '{"fieldtype":"input","name":"PillowHandle","title":"Uchwyt na ręcznik","datatype":"data"}'];
            $keyDefs['112'] = ['name' => 'FrontStyle', 'type' => 'input', 'def' => '{"name":"FrontStyle","datatype":"data","fieldtype":"input","title":"Fronty - styl (wzór)","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1461-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false}'];
            $keyDefs['113'] = ['name' => 'GeneralStyle', 'type' => 'input', 'def' => '{"name":"GeneralStyle","datatype":"data","fieldtype":"input","title":"Styl","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1646-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-12221-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12273-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['114'] = ['name' => 'TopSinkHole', 'type' => 'booleanSelect', 'def' => '{"name":"TopSinkHole","datatype":"data","fieldtype":"booleanSelect","title":"Blat - otwór pod baterię / umywalkę","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1487-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-2201-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['115'] = ['name' => 'TopSinkHoleSize', 'type' => 'quantityValue', 'def' => '{"name":"TopSinkHoleSize","datatype":"data","fieldtype":"quantityValue","title":"Blat - rozmiar otworu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-1513-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-1538-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-1579-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['116'] = ['name' => 'TopSinkHoleOffset', 'type' => 'quantityValue', 'def' => '{"name":"TopSinkHoleOffset","datatype":"data","fieldtype":"quantityValue","title":"Blat - odsunięcie otworu od krawędzi","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-1620-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-2162-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":[],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['117'] = ['name' => 'TopFrontMaterial', 'type' => 'select', 'def' => '{"name":"TopFrontMaterial","datatype":"data","fieldtype":"select","title":"Blat - wykończenie od góry","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1751-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-1777-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1804-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1934-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5029-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5280-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[],"displayfield-2549-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardFinish","combobox-2544-inputEl":"ChipboardFinish"}'];
            $keyDefs['118'] = ['name' => 'TopBackMaterial', 'type' => 'select', 'def' => '{"name":"TopBackMaterial","datatype":"data","fieldtype":"select","title":"Blat - materiał na wykończenie od dołu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1856-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-1882-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1908-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-4143-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-4169-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-5254-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-6115-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[],"displayfield-1590-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardFinish","combobox-1585-inputEl":"ChipboardFinish"}'];
            $keyDefs['119'] = ['name' => 'TopFrontColor', 'type' => 'select', 'def' => '{"name":"TopFrontColor","datatype":"data","fieldtype":"select","title":"Blat - kolor od góry","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1960-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-5055-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"","value":""}],"displayfield-2409-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-2404-inputEl":"Color"}'];
            $keyDefs['120'] = ['name' => 'TopColor', 'type' => 'select', 'def' => '{"name":"TopColor","datatype":"data","fieldtype":"select","title":"Blat - kolor od dołu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1986-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-4195-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-4960-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[],"displayfield-1442-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-1437-inputEl":"Color"}'];
            $keyDefs['121'] = ['name' => 'SoundbarModel', 'type' => 'input', 'def' => '{"name":"SoundbarModel","datatype":"data","fieldtype":"input","title":"Soundbar - model","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6867-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-12338-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12545-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12571-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12687-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12713-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12739-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12792-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['122'] = ['name' => 'RTVCount', 'type' => 'input', 'def' => '{"name":"RTVCount","datatype":"data","fieldtype":"input","title":"RTV - maksymalna ilość sprzętów RTV","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6929-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-6210-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['123'] = ['name' => 'EFFlameIntensityLevel', 'type' => 'numeric', 'def' => '{"name":"EFFlameIntensityLevel","datatype":"data","fieldtype":"numeric","title":"Kominek - ilość poziomów intensywności płomienia","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-2139-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-2164-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-3211-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['124'] = ['name' => 'EFRemoteControllerBattery', 'type' => 'input', 'def' => '{"name":"EFRemoteControllerBattery","datatype":"data","fieldtype":"input","title":"Kominek - rodzaj baterii do pilota","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2200-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false}'];
            $keyDefs['125'] = ['name' => 'EFRemoteControllerBatteryCount', 'type' => 'numeric', 'def' => '{"name":"EFRemoteControllerBatteryCount","datatype":"data","fieldtype":"numeric","title":"Kominek - ilość baterii do pilota","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-2226-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-2250-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['126'] = ['name' => 'FrontFrontMaterial', 'type' => 'select', 'def' => '{"name":"FrontFrontMaterial","datatype":"data","fieldtype":"select","title":"Front - materiał na wykończenie z zewnątrz","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2324-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-2479-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardFinish","combobox-2474-inputEl":"ChipboardFinish"}'];
            $keyDefs['127'] = ['name' => 'FrontBackMaterial', 'type' => 'select', 'def' => '{"name":"FrontBackMaterial","datatype":"data","fieldtype":"select","title":"Front - materiał na wykończenie od wewnątrz","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2613-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-2655-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardFinish","combobox-2650-inputEl":"ChipboardFinish"}'];
            $keyDefs['128'] = ['name' => 'FrontBackColor', 'type' => 'select', 'def' => '{"name":"FrontBackColor","datatype":"data","fieldtype":"select","title":"Front - kolor od wewnątrz","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2683-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-2725-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-2720-inputEl":"Color"}'];
            $keyDefs['129'] = ['name' => 'FrontColor', 'type' => 'multiselect', 'def' => '{"name":"FrontColor","datatype":"data","fieldtype":"multiselect","title":"Front - kolor od zewnątrz","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2753-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-2795-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-2790-inputEl":"Color","displayfield-11107-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-11109-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-11102-inputEl":"Color","displayfield-1388-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1390-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1383-inputEl":"Color","displayfield-1727-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1729-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1722-inputEl":"Color"}'];
            $keyDefs['130'] = ['name' => 'EFFlameColor', 'type' => 'multiselect', 'def' => '{"name":"EFFlameColor","datatype":"data","fieldtype":"multiselect","title":"Kominek - kolory płomieni","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-3143-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-3185-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-3180-inputEl":"Color","displayfield-7493-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-7495-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-7488-inputEl":"Color","displayfield-1634-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1636-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1629-inputEl":"Color","displayfield-1681-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1683-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1676-inputEl":"Color"}'];
            $keyDefs['131'] = ['name' => 'ClapMontageSide', 'type' => 'select', 'def' => '{"name":"ClapMontageSide","datatype":"data","fieldtype":"select","title":"Klapa - z której strony montowana","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"od dołu","defaultValueGenerator":"","width":"","displayfield-2230-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"od dołu","value":"od dołu"},{"key":"od góry","value":"od góry"}],"displayfield-2272-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-2274-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":1,"renderType":"list","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-2267-inputEl":null,"displayfield-2365-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2360-inputEl":null}'];
            $keyDefs['132'] = ['name' => 'FrontFinish', 'type' => 'select', 'def' => '{"name":"FrontFinish","datatype":"data","fieldtype":"select","title":"Front - wykończenie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2929-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"połysk","value":"połysk"},{"key":"mat","value":"mat"}],"displayfield-2972-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-2967-inputEl":null,"displayfield-7320-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-7315-inputEl":null,"displayfield-7363-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-7358-inputEl":"MattGloss"}'];
            $keyDefs['133'] = ['name' => 'LegFinish', 'type' => 'select', 'def' => '{"name":"LegFinish","datatype":"data","fieldtype":"select","title":"Nogi - wykończenie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-3038-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"mat","value":"mat"},{"key":"połysk","value":"połysk"}],"displayfield-3080-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-3075-inputEl":null,"displayfield-3161-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3156-inputEl":null,"displayfield-3204-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3199-inputEl":null,"displayfield-10799-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-10794-inputEl":"MattGloss"}'];
            $keyDefs['136'] = ['name' => 'OpenShelveDepth', 'type' => 'input', 'def' => '{"fieldtype":"input","name":"OpenShelveDepth","title":"OpenShelveDepth","datatype":"data"}'];
            $keyDefs['137'] = ['name' => 'RTVCableHole', 'type' => 'input', 'def' => '{"name":"RTVCableHole","datatype":"data","fieldtype":"input","title":"RTV - czy otwór na kable","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6184-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false}'];
            $keyDefs['138'] = ['name' => 'RTVCableHide', 'type' => 'input', 'def' => '{"name":"RTVCableHide","datatype":"data","fieldtype":"input","title":"RTV - czy posiada schowek na kable","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-6236-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false}'];
            $keyDefs['139'] = ['name' => 'EFHeat', 'type' => 'booleanSelect', 'def' => '{"name":"EFHeat","datatype":"data","fieldtype":"booleanSelect","title":"Kominek - czy ma funkcję grzania","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7524-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-7547-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['140'] = ['name' => 'EFHeatRangeFrom', 'type' => 'quantityValue', 'def' => '{"name":"EFHeatRangeFrom","datatype":"data","fieldtype":"quantityValue","title":"Kominek - temp. grzania - min.","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-7575-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-7601-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-7653-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","unitWidth":"","displayfield-8349-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"st_C","validUnits":["st_C"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['141'] = ['name' => 'EFHeatRangeTo', 'type' => 'quantityValue', 'def' => '{"name":"EFHeatRangeTo","datatype":"data","fieldtype":"quantityValue","title":"Kominek - temp. grzania - max.","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-7627-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-8309-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"st_C","validUnits":["st_C"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['142'] = ['name' => 'EFRemoteControllerBatteryInPack', 'type' => 'booleanSelect', 'def' => '{"name":"EFRemoteControllerBatteryInPack","datatype":"data","fieldtype":"booleanSelect","title":"Kominek - czy baterie do pilota są w zestawie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7679-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-8257-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['143'] = ['name' => 'EFLifetime', 'type' => 'quantityValue', 'def' => '{"name":"EFLifetime","datatype":"data","fieldtype":"quantityValue","title":"Kominek - żywotność","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-7705-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-8218-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"h","validUnits":["h"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['144'] = ['name' => 'EFFuel', 'type' => 'select', 'def' => '{"name":"EFFuel","datatype":"data","fieldtype":"select","title":"Kominek - rodzaj","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7731-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"elektryczny","value":"elektryczny"},{"key":"na bioetanol","value":"na bioetanol"}],"displayfield-7773-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-7768-inputEl":null}'];
            $keyDefs['145'] = ['name' => 'EFProgrammableWork', 'type' => 'booleanSelect', 'def' => '{"name":"EFProgrammableWork","datatype":"data","fieldtype":"booleanSelect","title":"Kominek - czy programowalny czas pracy","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7801-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-8026-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['146'] = ['name' => 'EFFrontMaterial', 'type' => 'select', 'def' => '{"name":"EFFrontMaterial","datatype":"data","fieldtype":"select","title":"Kominek - materiał przedniego panelu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"szyba hartowana","defaultValueGenerator":"","width":"","displayfield-7827-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-7853-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"szyba hartowana","value":"szyba hartowana"}],"displayfield-8166-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-8161-inputEl":null}'];
            $keyDefs['147'] = ['name' => 'EFFrontFinish', 'type' => 'select', 'def' => '{"name":"EFFrontFinish","datatype":"data","fieldtype":"select","title":"Kominek - wykończenie przedniego panelu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7879-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-8096-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-8091-inputEl":"MattGloss"}'];
            $keyDefs['148'] = ['name' => 'EFWeight', 'type' => 'quantityValue', 'def' => '{"name":"EFWeight","datatype":"data","fieldtype":"quantityValue","title":"Kominek - waga","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-7905-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-7987-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"kg","validUnits":["kg"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['149'] = ['name' => 'MontageWall', 'type' => 'booleanSelect', 'def' => '{"name":"MontageWall","datatype":"data","fieldtype":"booleanSelect","title":"Montaż - czy wymaga montażu do ściany","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-8427-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-8453-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-8476-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12971-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12996-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-13021-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['150'] = ['name' => 'MontageFloatKit', 'type' => 'booleanSelect', 'def' => '{"name":"MontageFloatKit","datatype":"data","fieldtype":"booleanSelect","title":"Montaż - czy zawiera zestaw do montażu do ściany","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-8504-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-8527-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-13142-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['151'] = ['name' => 'LightSwitch', 'type' => 'select', 'def' => '{"name":"LightSwitch","datatype":"data","fieldtype":"select","title":"Oświetlenie - rodzaj wyłącznika","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-8712-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"nożny","value":"nożny"},{"key":"dotykowy","value":"dotykowy"},{"key":"pilot","value":"pilot"}],"displayfield-8780-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-8775-inputEl":null,"displayfield-1819-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1814-inputEl":null}'];
            $keyDefs['152'] = ['name' => 'SoundbarPower', 'type' => 'quantityValue', 'def' => '{"name":"SoundbarPower","datatype":"data","fieldtype":"quantityValue","title":"Soundbar - moc całkowita","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-11137-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-11786-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"W","validUnits":["W"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['154'] = ['name' => 'SoundbarSubwoofer', 'type' => 'select', 'def' => '{"name":"SoundbarSubwoofer","datatype":"data","fieldtype":"select","title":"Soundbar - typ subwoofera","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-11215-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"aktywny","value":"aktywny"},{"key":"bezprzewodowy","value":"bezprzewodowy"},{"key":"przewodowy","value":"przewodowy"},{"key":"pasywny","value":"pasywny"},{"key":"zintegrowany z jednostką","value":"zintegrowany z jednostką"}],"displayfield-12033-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-12028-inputEl":null}'];
            $keyDefs['155'] = ['name' => 'SoundbarColor', 'type' => 'select', 'def' => '{"name":"SoundbarColor","datatype":"data","fieldtype":"select","title":"Soundbar - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-11241-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-11949-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-11944-inputEl":"Color"}'];
            $keyDefs['156'] = ['name' => 'SoundbarWidth', 'type' => 'quantityValue', 'def' => '{"name":"SoundbarWidth","datatype":"data","fieldtype":"quantityValue","title":"Soundbar - szerokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-11293-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-11681-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['157'] = ['name' => 'SoundbarHeight', 'type' => 'quantityValue', 'def' => '{"name":"SoundbarHeight","datatype":"data","fieldtype":"quantityValue","title":"Soundbar - wysokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-11319-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-11826-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['158'] = ['name' => 'SoundbarDepth', 'type' => 'quantityValue', 'def' => '{"name":"SoundbarDepth","datatype":"data","fieldtype":"quantityValue","title":"Soundbar - głębokość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-11345-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-11891-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['159'] = ['name' => 'SoundbarWeight', 'type' => 'quantityValue', 'def' => '{"name":"SoundbarWeight","datatype":"data","fieldtype":"quantityValue","title":"Soundbar - waga","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-11371-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-11721-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"kg","validUnits":["kg"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['160'] = ['name' => 'SoundbarRadio', 'type' => 'booleanSelect', 'def' => '{"name":"SoundbarRadio","datatype":"data","fieldtype":"booleanSelect","title":"Soundbar - czy posiada radio","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-11397-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-11760-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['162'] = ['name' => 'SoundbarAudioDecoder', 'type' => 'select', 'def' => '{"name":"SoundbarAudioDecoder","datatype":"data","fieldtype":"select","title":"Soundbar - dekoder audio","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-11475-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"Dobly Digital","value":"Dobly Digital"}],"displayfield-12121-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-12116-inputEl":null}'];
            $keyDefs['163'] = ['name' => 'SoundbarManufacturer', 'type' => 'select', 'def' => '{"name":"SoundbarManufacturer","datatype":"data","fieldtype":"select","title":"Soundbar - producent","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-11449-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"JBL","value":"JBL"}],"displayfield-12077-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-12072-inputEl":null}'];
            $keyDefs['164'] = ['name' => 'SoundbarAudioPower', 'type' => 'quantityValue', 'def' => '{"name":"SoundbarAudioPower","datatype":"data","fieldtype":"quantityValue","title":"Soundbar - moc głośników","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-11501-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-11975-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"W","validUnits":["W"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['165'] = ['name' => 'GeneralCollection', 'type' => 'input', 'def' => '{"name":"GeneralCollection","datatype":"data","fieldtype":"input","title":"Kolekcja / Seria","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-12247-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false}'];
            $keyDefs['166'] = ['name' => 'SoundbarBluetooth', 'type' => 'booleanSelect', 'def' => '{"name":"SoundbarBluetooth","datatype":"data","fieldtype":"booleanSelect","title":"Soundbar - Bluetooth","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-12598-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-12766-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12818-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12882-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12908-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12934-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-5647-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['167'] = ['name' => 'SoundbarWifi', 'type' => 'booleanSelect', 'def' => '{"name":"SoundbarWifi","datatype":"data","fieldtype":"booleanSelect","title":"Soundbar - Wi-fi","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-13188-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-14022-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-5715-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['168'] = ['name' => 'DoorColor', 'type' => 'multiselect', 'def' => '{"name":"DoorColor","datatype":"data","fieldtype":"multiselect","title":"Drzwi - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-13214-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-13256-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-13251-inputEl":"Color","displayfield-1542-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-1544-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","combobox-1537-inputEl":"Color"}'];
            $keyDefs['169'] = ['name' => 'DrawerColor', 'type' => 'multiselect', 'def' => '{"name":"DrawerColor","datatype":"data","fieldtype":"multiselect","title":"Szuflady - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-13284-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-13326-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-13328-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-13321-inputEl":"Color","displayfield-1588-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1590-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1583-inputEl":"Color"}'];
            $keyDefs['170'] = ['name' => 'ClapColor', 'type' => 'multiselect', 'def' => '{"name":"ClapColor","datatype":"data","fieldtype":"multiselect","title":"Klapy - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-13357-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-13399-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-13401-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-13394-inputEl":"Color","displayfield-1452-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-1454-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-1447-inputEl":"Color"}'];
            $keyDefs['171'] = ['name' => 'SoundbarKit', 'type' => 'multiselect', 'def' => '{"name":"SoundbarKit","datatype":"data","fieldtype":"multiselect","title":"Soundbar - wyspoażenie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2983-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"kabel HDMI","value":"kabel HDMI"},{"key":"kabel zasilający","value":"kabel zasilający"},{"key":"pilot","value":"pilot"},{"key":"zestaw montażowy","value":"zestaw montażowy"}],"displayfield-3026-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-3028-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-3021-inputEl":null}'];
            $keyDefs['172'] = ['name' => 'SoundbarWarranty', 'type' => 'quantityValue', 'def' => '{"name":"SoundbarWarranty","datatype":"data","fieldtype":"quantityValue","title":"Soundbar - gwarancja","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-3057-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-3081-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"y","validUnits":["y"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-3179-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['173'] = ['name' => 'TopBorderGlue', 'type' => 'select', 'def' => '{"name":"TopBorderGlue","datatype":"data","fieldtype":"select","title":"Blat - klej na obrzeża","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1434-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1477-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"BorderGlue","combobox-1472-inputEl":"BorderGlue"}'];
            $keyDefs['175'] = ['name' => 'TopFinish', 'type' => 'select', 'def' => '{"name":"TopFinish","datatype":"data","fieldtype":"select","title":"Blat - wykończenie od góry","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1449-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1491-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-1486-inputEl":"MattGloss"}'];
            $keyDefs['176'] = ['name' => 'TopBackFinish', 'type' => 'select', 'def' => '{"name":"TopBackFinish","datatype":"data","fieldtype":"select","title":"Blat - wykończenie od spodu","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1378-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1421-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-1416-inputEl":"MattGloss"}'];
            $keyDefs['177'] = ['name' => 'LegCount', 'type' => 'numeric', 'def' => '{"name":"LegCount","datatype":"data","fieldtype":"numeric","title":"Nogi - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-10532-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-10557-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-10591-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['178'] = ['name' => 'SlipColor', 'type' => 'select', 'def' => '{"name":"SlipColor","datatype":"data","fieldtype":"select","title":"Ślizgacze - kolor","options":[],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-10882-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-10877-inputEl":null,"displayfield-10925-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-10920-inputEl":"Color","displayfield-11803-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-11798-inputEl":"Color"}'];
            $keyDefs['179'] = ['name' => 'SlipCount', 'type' => 'numeric', 'def' => '{"name":"SlipCount","datatype":"data","fieldtype":"numeric","title":"Ślizgacze - ilość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-10951-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":null,"defaultValueGenerator":"","decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-11828-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['180'] = ['name' => 'LegFrameColor', 'type' => 'select', 'def' => '{"name":"LegFrameColor","datatype":"data","fieldtype":"select","title":"Stelaż - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-11060-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-11086-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[],"displayfield-11307-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-11302-inputEl":"Color","displayfield-11880-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-11875-inputEl":"Color"}'];
            $keyDefs['181'] = ['name' => 'LegFrameMaterial', 'type' => 'select', 'def' => '{"name":"LegFrameMaterial","datatype":"data","fieldtype":"select","title":"Stelaż - materiał","options":[{"key":"metal","value":"metal"},{"key":"drewno","value":"drewno"}],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-11263-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"metal","defaultValueGenerator":"","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-11258-inputEl":null,"displayfield-12005-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-12000-inputEl":null}'];
            $keyDefs['182'] = ['name' => 'LegFrameHeight', 'type' => 'quantityValue', 'def' => '{"name":"LegFrameHeight","datatype":"data","fieldtype":"quantityValue","title":"Stelaż - wysokość","tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","unitWidth":"","displayfield-11205-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":null,"defaultUnit":"mm","defaultValueGenerator":"","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-11948-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['183'] = ['name' => 'LegFrameFinish', 'type' => 'select', 'def' => '{"name":"LegFrameFinish","datatype":"data","fieldtype":"select","title":"Stelaż - wykończenie","options":[],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-11153-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":"","defaultValueGenerator":"","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-11148-inputEl":"MattGloss","displayfield-11923-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-11918-inputEl":"MattGloss"}'];
            $keyDefs['184'] = ['name' => 'LegFrameMontageReady', 'type' => 'booleanSelect', 'def' => '{"name":"LegFrameMontageReady","datatype":"data","fieldtype":"booleanSelect","title":"Stelaż - czy produkt ma otwory montażowe na stelaż","yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","displayfield-11109-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-12029-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['185'] = ['name' => 'MirrorFrontMaterial', 'type' => 'select', 'def' => '{"name":"MirrorFrontMaterial","datatype":"data","fieldtype":"select","title":"Front z lustrem - materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1588-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-1614-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[],"displayfield-1937-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardType","combobox-1932-inputEl":null,"displayfield-2994-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2989-inputEl":"ChipboardType","displayfield-3402-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-3397-inputEl":"ChipboardType"}'];
            $keyDefs['186'] = ['name' => 'MirrorFrontBackMaterial', 'type' => 'select', 'def' => '{"name":"MirrorFrontBackMaterial","datatype":"data","fieldtype":"select","title":"Front z lustrem - materiał na wykończenie od wewnątrz","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1640-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1893-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardFinish","combobox-1888-inputEl":"ChipboardFinish"}'];
            $keyDefs['187'] = ['name' => 'MirrorFrontBackColor', 'type' => 'select', 'def' => '{"name":"MirrorFrontBackColor","datatype":"data","fieldtype":"select","title":"Front z lustrm - kolor od wewnątrz","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1666-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1849-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-1844-inputEl":"Color"}'];
            $keyDefs['188'] = ['name' => 'MirrorFrontThickness', 'type' => 'select', 'def' => '{"name":"MirrorFrontThickness","datatype":"data","fieldtype":"select","title":"Front z lustrem - grubość","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1692-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"16","value":"16"},{"key":"18","value":"18"}],"displayfield-1804-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-1799-inputEl":null}'];
            $keyDefs['189'] = ['name' => 'MirrorFrontBorderType', 'type' => 'select', 'def' => '{"name":"MirrorFrontBorderType","datatype":"data","fieldtype":"select","title":"Front z lustrem - obrzeże materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1718-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1760-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"ChipboardBorderFinish","combobox-1755-inputEl":"ChipboardBorderFinish"}'];
            $keyDefs['190'] = ['name' => 'BodyBorderColor', 'type' => 'multiselect', 'def' => '{"name":"BodyBorderColor","datatype":"data","fieldtype":"multiselect","title":"Korpus obrzeże - kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-4737-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-4780-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-4782-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-4775-inputEl":"Color"}'];
            $keyDefs['191'] = ['name' => 'Color', 'type' => 'multiselect', 'def' => '{"name":"Color","datatype":"data","fieldtype":"multiselect","title":"Kolor","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-1401-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-1444-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-1446-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"tags","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Color","combobox-1439-inputEl":"Color","displayfield-2132-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-2134-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-2127-inputEl":"Color"}'];
            $keyDefs['192'] = ['name' => 'FaucetHeight', 'type' => 'booleanSelect', 'def' => '{"name":"FaucetHeight","datatype":"data","fieldtype":"booleanSelect","title":"Bateria - wysoka","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2433-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-2456-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['193'] = ['name' => 'FaucetTerminator', 'type' => 'booleanSelect', 'def' => '{"name":"FaucetTerminator","datatype":"data","fieldtype":"booleanSelect","title":"Bateria - korek w komplecie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2793-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-2816-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['194'] = ['name' => 'FaucetMontage', 'type' => 'select', 'def' => '{"name":"FaucetMontage","datatype":"data","fieldtype":"select","title":"Bateria - montaż","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2844-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"Stojący","value":"Stojący"},{"key":"Podtynkowy","value":"Podtynkowy"},{"key":"Wolnostojący","value":"Wolnostojący"}],"displayfield-2909-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-2904-inputEl":null}'];
            $keyDefs['195'] = ['name' => 'FaucetThermostate', 'type' => 'booleanSelect', 'def' => '{"name":"FaucetThermostate","datatype":"data","fieldtype":"booleanSelect","title":"Bateria - czy termostat","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-2937-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-2960-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['196'] = ['name' => 'FaucetRange', 'type' => 'quantityValue', 'def' => '{"name":"FaucetRange","datatype":"data","fieldtype":"quantityValue","title":"Bateria - zasięg wylewki","tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","unitWidth":"","displayfield-3047-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":null,"defaultUnit":"mm","defaultValueGenerator":"","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-3153-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['197'] = ['name' => 'FaucetWaterHeight', 'type' => 'quantityValue', 'def' => '{"name":"FaucetWaterHeight","datatype":"data","fieldtype":"quantityValue","title":"Bateria - wysokość wypływu wody","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-3089-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-3113-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['198'] = ['name' => 'FaucetActuatorKind', 'type' => 'select', 'def' => '{"name":"FaucetActuatorKind","datatype":"data","fieldtype":"select","title":"Bateria - rodzaj wylewki","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-3194-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"Stała","value":"Stała"},{"key":"Ruchoma","value":"Ruchoma"}],"displayfield-3236-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-3231-inputEl":null}'];
            $keyDefs['199'] = ['name' => 'FaucetKind', 'type' => 'input', 'def' => '{"name":"FaucetKind","datatype":"data","fieldtype":"input","title":"Bateria - rodzaj","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-3981-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false}'];
            $keyDefs['200'] = ['name' => 'Material', 'type' => 'select', 'def' => '{"name":"Material","datatype":"data","fieldtype":"select","title":"Materiał","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-4007-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-8828-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"Material","combobox-8823-inputEl":"Material"}'];
            $keyDefs['201'] = ['name' => 'Finish', 'type' => 'select', 'def' => '{"name":"Finish","datatype":"data","fieldtype":"select","title":"Wykończenie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-4033-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[],"displayfield-7836-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"select_options","optionsProviderClass":"Pimcore\\Bundle\\CoreBundle\\OptionsProvider\\SelectOptionsOptionsProvider","optionsProviderData":"MattGloss","combobox-7831-inputEl":"MattGloss"}'];
            $keyDefs['202'] = ['name' => 'FaucetPerlator', 'type' => 'booleanSelect', 'def' => '{"name":"FaucetPerlator","datatype":"data","fieldtype":"booleanSelect","title":"Bateria - perlator","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-4059-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-4082-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['203'] = ['name' => 'FaucetCermicHeader', 'type' => 'booleanSelect', 'def' => '{"name":"FaucetCermicHeader","datatype":"data","fieldtype":"booleanSelect","title":"Bateria - ceramiczna głowica","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-4110-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-4133-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['204'] = ['name' => 'FaucetHeaderDiameter', 'type' => 'quantityValue', 'def' => '{"name":"FaucetHeaderDiameter","datatype":"data","fieldtype":"quantityValue","title":"Bateria - średnica głowicy","tooltip":"","mandatory":false,"index":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","width":"","unitWidth":"","displayfield-4185-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultValue":null,"defaultUnit":"mm","defaultValueGenerator":"","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null,"displayfield-5056-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['205'] = ['name' => 'FlowCapacityClass', 'type' => 'select', 'def' => '{"name":"FlowCapacityClass","datatype":"data","fieldtype":"select","title":"Klasa przepływu","tooltip":"Klasa A (poniżej 0,25 l/s)\nKlasa S (0,25 - 0,30 l/s)\nKlasa B (0,31 - 0,37 l/s)\nKlasa C (0,38 - 0,43 l/s)\nKlasa D (0,44 - 0,50 l/s)\nKlasa E (powyżej 0,50 l/s)","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-4227-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"displayfield-4253-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","displayfield-4279-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","options":[{"key":"Klasa A (poniżej 0,25 l/s)","value":"A"},{"key":"Klasa S (0,25 - 0,30 l/s)","value":"S"},{"key":"Klasa B (0,31 - 0,37 l/s)","value":"B"},{"key":"Klasa C (0,38 - 0,43 l/s)","value":"C"},{"key":"Klasa D (0,44 - 0,50 l/s)","value":"D"},{"key":"Klasa E (powyżej 0,50 l/s)","value":"E"}],"displayfield-4321-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-4316-inputEl":null,"displayfield-8215-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-8210-inputEl":null}'];
            $keyDefs['206'] = ['name' => 'FaucetWire', 'type' => 'booleanSelect', 'def' => '{"name":"FaucetWire","datatype":"data","fieldtype":"booleanSelect","title":"Bateria - wąż w zestwie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7171-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-7221-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['207'] = ['name' => 'FaucetWireLength', 'type' => 'quantityValue', 'def' => '{"name":"FaucetWireLength","datatype":"data","fieldtype":"quantityValue","title":"Bateria - długość węża","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":null,"defaultValueGenerator":"","width":"","displayfield-7197-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"unitWidth":"","displayfield-7247-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","defaultUnit":"mm","validUnits":["mm"],"autoConvert":false,"decimalSize":null,"decimalPrecision":null,"integer":false,"unsigned":false,"minValue":null,"maxValue":null}'];
            $keyDefs['208'] = ['name' => 'SinkKind', 'type' => 'select', 'def' => '{"name":"SinkKind","datatype":"data","fieldtype":"select","title":"Umywalka - typ","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7680-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"Nablatowa","value":"Nablatowa"},{"key":"Wpuszczana","value":"Wpuszczana"},{"key":"Wisząca","value":"Wisząca"},{"key":"Wolnostojąca","value":"Wolnostojąca"}],"displayfield-7722-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-7717-inputEl":null}'];
            $keyDefs['209'] = ['name' => 'SinkShape', 'type' => 'select', 'def' => '{"name":"SinkShape","datatype":"data","fieldtype":"select","title":"Umywalka - kształt","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7750-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"Kwadratowy","value":"Kwadratowy"},{"key":"Okrągły","value":"Okrągły"},{"key":"Owalny","value":"Owalny"},{"key":"Prostokątny","value":"Prostokątny"},{"key":"Asymetryczna","value":"Asymetryczna"}],"displayfield-7792-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-7787-inputEl":null,"displayfield-8106-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-8101-inputEl":null}'];
            $keyDefs['210'] = ['name' => 'SinkProtectionLayer', 'type' => 'booleanSelect', 'def' => '{"name":"SinkProtectionLayer","datatype":"data","fieldtype":"booleanSelect","title":"Umywalka - powierzchnia ochronna","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7864-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-7887-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['211'] = ['name' => 'SinkFaucetHole', 'type' => 'booleanSelect', 'def' => '{"name":"SinkFaucetHole","datatype":"data","fieldtype":"booleanSelect","title":"Umywalka - otwór na baterię","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7915-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-7938-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['212'] = ['name' => 'SinkSiding', 'type' => 'select', 'def' => '{"name":"SinkSiding","datatype":"data","fieldtype":"select","title":"Umywalka - stronność","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-7966-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"options":[{"key":"Obustronna","value":"Obustronna"},{"key":"Lewa","value":"Lewa"},{"key":"Prawa","value":"Prawa"}],"displayfield-8008-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","height":"","displayfield-8010-inputEl":"The height of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","maxItems":null,"renderType":"list","optionsProviderType":"configure","optionsProviderClass":"","optionsProviderData":"","combobox-8003-inputEl":null,"displayfield-9443-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","combobox-9438-inputEl":null}'];
            $keyDefs['213'] = ['name' => 'SinkOverfill', 'type' => 'booleanSelect', 'def' => '{"name":"SinkOverfill","datatype":"data","fieldtype":"booleanSelect","title":"Umywalka - otwór przelewowy","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-8039-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-8062-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
            $keyDefs['214'] = ['name' => 'SinkSiphon', 'type' => 'booleanSelect', 'def' => '{"name":"SinkSiphon","datatype":"data","fieldtype":"booleanSelect","title":"Umywalka - syfon w zestawie","tooltip":"","mandatory":false,"index":false,"unique":false,"noteditable":false,"invisible":false,"visibleGridView":false,"visibleSearch":false,"style":"","defaultValue":"","defaultValueGenerator":"","width":"","displayfield-8134-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units.","showCharCount":false,"yesLabel":"tak","noLabel":"nie","emptyLabel":"","options":[],"displayfield-8157-inputEl":"The width of this component. A numeric value will be interpreted as the number of pixels; a string value will be treated as a CSS value with units."}'];
        }

        $rel = [];
        if(1==1)
        {
            $rel[] = ['group' =>'13', 'key' => '9'];
            $rel[] = ['group' =>'13', 'key' => '21'];
            $rel[] = ['group' =>'13', 'key' => '22'];
            $rel[] = ['group' =>'13', 'key' => '49'];
            $rel[] = ['group' =>'13', 'key' => '50'];
            $rel[] = ['group' =>'14', 'key' => '10'];
            $rel[] = ['group' =>'14', 'key' => '11'];
            $rel[] = ['group' =>'14', 'key' => '12'];
            $rel[] = ['group' =>'14', 'key' => '13'];
            $rel[] = ['group' =>'14', 'key' => '14'];
            $rel[] = ['group' =>'14', 'key' => '15'];
            $rel[] = ['group' =>'14', 'key' => '51'];
            $rel[] = ['group' =>'14', 'key' => '52'];
            $rel[] = ['group' =>'14', 'key' => '61'];
            $rel[] = ['group' =>'14', 'key' => '62'];
            $rel[] = ['group' =>'14', 'key' => '190'];
            $rel[] = ['group' =>'15', 'key' => '7'];
            $rel[] = ['group' =>'15', 'key' => '93'];
            $rel[] = ['group' =>'15', 'key' => '94'];
            $rel[] = ['group' =>'15', 'key' => '95'];
            $rel[] = ['group' =>'15', 'key' => '96'];
            $rel[] = ['group' =>'15', 'key' => '97'];
            $rel[] = ['group' =>'15', 'key' => '131'];
            $rel[] = ['group' =>'15', 'key' => '170'];
            $rel[] = ['group' =>'16', 'key' => '6'];
            $rel[] = ['group' =>'16', 'key' => '43'];
            $rel[] = ['group' =>'16', 'key' => '105'];
            $rel[] = ['group' =>'16', 'key' => '168'];
            $rel[] = ['group' =>'17', 'key' => '8'];
            $rel[] = ['group' =>'17', 'key' => '44'];
            $rel[] = ['group' =>'17', 'key' => '45'];
            $rel[] = ['group' =>'17', 'key' => '46'];
            $rel[] = ['group' =>'17', 'key' => '81'];
            $rel[] = ['group' =>'17', 'key' => '82'];
            $rel[] = ['group' =>'17', 'key' => '83'];
            $rel[] = ['group' =>'17', 'key' => '84'];
            $rel[] = ['group' =>'17', 'key' => '85'];
            $rel[] = ['group' =>'17', 'key' => '86'];
            $rel[] = ['group' =>'17', 'key' => '87'];
            $rel[] = ['group' =>'17', 'key' => '88'];
            $rel[] = ['group' =>'17', 'key' => '89'];
            $rel[] = ['group' =>'17', 'key' => '90'];
            $rel[] = ['group' =>'17', 'key' => '91'];
            $rel[] = ['group' =>'17', 'key' => '92'];
            $rel[] = ['group' =>'17', 'key' => '169'];
            $rel[] = ['group' =>'18', 'key' => '32'];
            $rel[] = ['group' =>'18', 'key' => '33'];
            $rel[] = ['group' =>'18', 'key' => '34'];
            $rel[] = ['group' =>'18', 'key' => '35'];
            $rel[] = ['group' =>'18', 'key' => '112'];
            $rel[] = ['group' =>'18', 'key' => '126'];
            $rel[] = ['group' =>'18', 'key' => '127'];
            $rel[] = ['group' =>'18', 'key' => '128'];
            $rel[] = ['group' =>'18', 'key' => '129'];
            $rel[] = ['group' =>'18', 'key' => '132'];
            $rel[] = ['group' =>'19', 'key' => '36'];
            $rel[] = ['group' =>'19', 'key' => '37'];
            $rel[] = ['group' =>'19', 'key' => '53'];
            $rel[] = ['group' =>'19', 'key' => '54'];
            $rel[] = ['group' =>'19', 'key' => '55'];
            $rel[] = ['group' =>'19', 'key' => '56'];
            $rel[] = ['group' =>'19', 'key' => '57'];
            $rel[] = ['group' =>'20', 'key' => '28'];
            $rel[] = ['group' =>'20', 'key' => '29'];
            $rel[] = ['group' =>'20', 'key' => '30'];
            $rel[] = ['group' =>'20', 'key' => '31'];
            $rel[] = ['group' =>'21', 'key' => '58'];
            $rel[] = ['group' =>'21', 'key' => '59'];
            $rel[] = ['group' =>'21', 'key' => '60'];
            $rel[] = ['group' =>'21', 'key' => '63'];
            $rel[] = ['group' =>'21', 'key' => '111'];
            $rel[] = ['group' =>'22', 'key' => '42'];
            $rel[] = ['group' =>'22', 'key' => '64'];
            $rel[] = ['group' =>'23', 'key' => '47'];
            $rel[] = ['group' =>'23', 'key' => '48'];
            $rel[] = ['group' =>'23', 'key' => '65'];
            $rel[] = ['group' =>'23', 'key' => '66'];
            $rel[] = ['group' =>'23', 'key' => '67'];
            $rel[] = ['group' =>'23', 'key' => '68'];
            $rel[] = ['group' =>'23', 'key' => '69'];
            $rel[] = ['group' =>'23', 'key' => '151'];
            $rel[] = ['group' =>'24', 'key' => '40'];
            $rel[] = ['group' =>'24', 'key' => '41'];
            $rel[] = ['group' =>'24', 'key' => '185'];
            $rel[] = ['group' =>'24', 'key' => '186'];
            $rel[] = ['group' =>'24', 'key' => '187'];
            $rel[] = ['group' =>'24', 'key' => '188'];
            $rel[] = ['group' =>'24', 'key' => '189'];
            $rel[] = ['group' =>'25', 'key' => '73'];
            $rel[] = ['group' =>'25', 'key' => '74'];
            $rel[] = ['group' =>'25', 'key' => '75'];
            $rel[] = ['group' =>'25', 'key' => '76'];
            $rel[] = ['group' =>'25', 'key' => '77'];
            $rel[] = ['group' =>'25', 'key' => '78'];
            $rel[] = ['group' =>'25', 'key' => '79'];
            $rel[] = ['group' =>'25', 'key' => '80'];
            $rel[] = ['group' =>'26', 'key' => '23'];
            $rel[] = ['group' =>'26', 'key' => '24'];
            $rel[] = ['group' =>'26', 'key' => '25'];
            $rel[] = ['group' =>'26', 'key' => '26'];
            $rel[] = ['group' =>'26', 'key' => '27'];
            $rel[] = ['group' =>'27', 'key' => '70'];
            $rel[] = ['group' =>'27', 'key' => '71'];
            $rel[] = ['group' =>'27', 'key' => '72'];
            $rel[] = ['group' =>'28', 'key' => '16'];
            $rel[] = ['group' =>'28', 'key' => '17'];
            $rel[] = ['group' =>'28', 'key' => '18'];
            $rel[] = ['group' =>'28', 'key' => '19'];
            $rel[] = ['group' =>'28', 'key' => '20'];
            $rel[] = ['group' =>'28', 'key' => '117'];
            $rel[] = ['group' =>'28', 'key' => '118'];
            $rel[] = ['group' =>'28', 'key' => '119'];
            $rel[] = ['group' =>'28', 'key' => '120'];
            $rel[] = ['group' =>'28', 'key' => '173'];
            $rel[] = ['group' =>'28', 'key' => '175'];
            $rel[] = ['group' =>'28', 'key' => '176'];
            $rel[] = ['group' =>'29', 'key' => '106'];
            $rel[] = ['group' =>'29', 'key' => '107'];
            $rel[] = ['group' =>'29', 'key' => '108'];
            $rel[] = ['group' =>'29', 'key' => '109'];
            $rel[] = ['group' =>'29', 'key' => '123'];
            $rel[] = ['group' =>'29', 'key' => '124'];
            $rel[] = ['group' =>'29', 'key' => '125'];
            $rel[] = ['group' =>'29', 'key' => '130'];
            $rel[] = ['group' =>'29', 'key' => '139'];
            $rel[] = ['group' =>'29', 'key' => '140'];
            $rel[] = ['group' =>'29', 'key' => '141'];
            $rel[] = ['group' =>'29', 'key' => '142'];
            $rel[] = ['group' =>'29', 'key' => '143'];
            $rel[] = ['group' =>'29', 'key' => '144'];
            $rel[] = ['group' =>'29', 'key' => '145'];
            $rel[] = ['group' =>'29', 'key' => '146'];
            $rel[] = ['group' =>'29', 'key' => '147'];
            $rel[] = ['group' =>'29', 'key' => '148'];
            $rel[] = ['group' =>'30', 'key' => '101'];
            $rel[] = ['group' =>'30', 'key' => '102'];
            $rel[] = ['group' =>'30', 'key' => '103'];
            $rel[] = ['group' =>'30', 'key' => '110'];
            $rel[] = ['group' =>'30', 'key' => '133'];
            $rel[] = ['group' =>'30', 'key' => '177'];
            $rel[] = ['group' =>'31', 'key' => '121'];
            $rel[] = ['group' =>'31', 'key' => '152'];
            $rel[] = ['group' =>'31', 'key' => '154'];
            $rel[] = ['group' =>'31', 'key' => '155'];
            $rel[] = ['group' =>'31', 'key' => '156'];
            $rel[] = ['group' =>'31', 'key' => '157'];
            $rel[] = ['group' =>'31', 'key' => '158'];
            $rel[] = ['group' =>'31', 'key' => '159'];
            $rel[] = ['group' =>'31', 'key' => '160'];
            $rel[] = ['group' =>'31', 'key' => '162'];
            $rel[] = ['group' =>'31', 'key' => '163'];
            $rel[] = ['group' =>'31', 'key' => '164'];
            $rel[] = ['group' =>'31', 'key' => '166'];
            $rel[] = ['group' =>'31', 'key' => '167'];
            $rel[] = ['group' =>'31', 'key' => '171'];
            $rel[] = ['group' =>'31', 'key' => '172'];
            $rel[] = ['group' =>'34', 'key' => '104'];
            $rel[] = ['group' =>'34', 'key' => '149'];
            $rel[] = ['group' =>'34', 'key' => '150'];
            $rel[] = ['group' =>'35', 'key' => '122'];
            $rel[] = ['group' =>'35', 'key' => '137'];
            $rel[] = ['group' =>'35', 'key' => '138'];
            $rel[] = ['group' =>'36', 'key' => '114'];
            $rel[] = ['group' =>'36', 'key' => '115'];
            $rel[] = ['group' =>'36', 'key' => '116'];
            $rel[] = ['group' =>'37', 'key' => '113'];
            $rel[] = ['group' =>'37', 'key' => '165'];
            $rel[] = ['group' =>'38', 'key' => '178'];
            $rel[] = ['group' =>'38', 'key' => '179'];
            $rel[] = ['group' =>'39', 'key' => '180'];
            $rel[] = ['group' =>'39', 'key' => '181'];
            $rel[] = ['group' =>'39', 'key' => '182'];
            $rel[] = ['group' =>'39', 'key' => '183'];
            $rel[] = ['group' =>'39', 'key' => '184'];
            $rel[] = ['group' =>'40', 'key' => '191'];
            $rel[] = ['group' =>'40', 'key' => '192'];
            $rel[] = ['group' =>'40', 'key' => '193'];
            $rel[] = ['group' =>'40', 'key' => '194'];
            $rel[] = ['group' =>'40', 'key' => '195'];
            $rel[] = ['group' =>'40', 'key' => '196'];
            $rel[] = ['group' =>'40', 'key' => '197'];
            $rel[] = ['group' =>'40', 'key' => '198'];
            $rel[] = ['group' =>'40', 'key' => '199'];
            $rel[] = ['group' =>'40', 'key' => '200'];
            $rel[] = ['group' =>'40', 'key' => '202'];
            $rel[] = ['group' =>'40', 'key' => '203'];
            $rel[] = ['group' =>'40', 'key' => '204'];
            $rel[] = ['group' =>'40', 'key' => '205'];
            $rel[] = ['group' =>'40', 'key' => '206'];
            $rel[] = ['group' =>'40', 'key' => '207'];
            $rel[] = ['group' =>'41', 'key' => '200'];
            $rel[] = ['group' =>'41', 'key' => '205'];
            $rel[] = ['group' =>'41', 'key' => '208'];
            $rel[] = ['group' =>'41', 'key' => '209'];
            $rel[] = ['group' =>'41', 'key' => '210'];
            $rel[] = ['group' =>'41', 'key' => '211'];
            $rel[] = ['group' =>'41', 'key' => '212'];
            $rel[] = ['group' =>'41', 'key' => '213'];
            $rel[] = ['group' =>'41', 'key' => '214'];
        }

        $this->writeInfo("[ClassificationStore] Groups: " . count($groupDef) . ", Keys: " . count($keyDefs) . ", Relations: " . count($rel));

        foreach ($groupDef as $gid => $gname)
        {
            $gg = \Pimcore\Model\DataObject\Classificationstore\GroupConfig::getByName($gname, $csId);
            if($gg)
            {
                if($verbose)
                {
                    $this->writeComment("[~] Skipping $gname.");
                }

                $this->groupId[$gid] = $gg->getId();
                continue;
            }

            $group = new \Pimcore\Model\DataObject\Classificationstore\GroupConfig();
            $group->setName($gname);
            $group->setStoreId($csId);
            $group->save();

            $this->groupId[$gid] = $group->getId();

            $this->writeInfo("[+] ". $group->getName());
        }

        foreach ($keyDefs as $id => $data)
        {
            $name = $data['name'];
            $type = $data['type'];
            $defPl = $data['def'];

            $def = $this->removePolishDiacritics($defPl);
            $def = str_replace("\\", "\\\\", $def);

            $kk = \Pimcore\Model\DataObject\Classificationstore\KeyConfig::getByName($name, $csId);
            if($kk)
            {
                if($verbose)
                {
                    $this->writeComment("[~] Skipping $name.");
                }
                $this->keyId[$id] = $kk->getId();
                continue;
            }

            $key = new \Pimcore\Model\DataObject\Classificationstore\KeyConfig();
            $key->setStoreId($csId);
            $key->setName($name);
            $key->setType($type);
            $key->setEnabled(true);
            $key->setDefinition($def);
            $key->save();

            $this->keyId[$id] = $key->getId();

            $this->writeInfo("[+] ". $key->getName());
        }

        foreach ($rel as $sourceRelation)
        {
            $gid = $this->groupId[$sourceRelation['group']];
            $kid = $this->keyId[$sourceRelation['key']];

            $r = \Pimcore\Model\DataObject\Classificationstore\KeyGroupRelation::getByGroupAndKeyId($gid, $kid);

            if($r)
            {
                if($verbose)
                {
                    $this->writeComment("[~] Skipping $gid-$kid.");
                }
                continue;
            }

            $keyRel = new \Pimcore\Model\DataObject\Classificationstore\KeyGroupRelation();
            $keyRel->setGroupId($gid);
            $keyRel->setKeyId($kid);
            $keyRel->save();

            $this->writeInfo("[+] $gid-$kid");
        }
    }

    private function importCollections($GRUPY_PATH, $GRUPY_ASSET_PATH, $verbose = false)
    {
        DataObject::setHideUnpublished(false);

        $this->addFolderPath($GRUPY_PATH);
        $GRUPY_ID = DataObject\Folder::getByPath($GRUPY_PATH)->getId();

        $this->addFolderPath($GRUPY_ASSET_PATH, "ASSET");
        $GRUPY_ASSET_ID = Asset\Folder::getByPath($GRUPY_ASSET_PATH)->getId();

        $data = $this->httpClient->request("GET", "http://10.10.100.1/api/v1/product/exportcollections")->toArray();

        $i = 0;
        $total = count($data);

        $this->writeInfo("[Collections] $total items");

        foreach ($data as $key => $imageURL)
        {
            if(Group::getByPath($GRUPY_PATH . "/" . $key))
            {
                if($verbose)
                {
                    $this->writeComment("Skipping $key.");
                }
                continue;
            }

            $g = new Group();
            $g->setKey($key);
            $g->setParentId($GRUPY_ID);
            $g->setName($key, "pl");

            $imname = explode("/", $imageURL);
            $imname = str_replace("%", "_", $imname[count($imname) - 1]);

            $img = Asset\Image::getByPath($GRUPY_ASSET_PATH . "/" . $imname);
            if($img)
            {
                $g->setImage($img);
            }
            elseif($imageURL)
            {
                $im = new \Pimcore\Model\Asset\Image();
                $im->setFilename($imname);
                $im->setData(file_get_contents($imageURL));
                $im->setParentId($GRUPY_ASSET_ID);
                $im->save();

                $g->setImage($im);
            }

            $g->save();

            $this->writeInfo("[+] " . $g->getKey());
            $i++;

            if($i % 20 == 0)
                \Pimcore::collectGarbage();
        }
    }

    private function importPackages($PACZKI_PATH)
    {
        $this->addFolderPath($PACZKI_PATH);
        $PACZKI_ID = DataObject\Folder::getByPath($PACZKI_PATH)->getId();

        $this->writeInfo("[Packages]");

        $this->importPackage(146, $PACZKI_ID);
        $this->importPackage(2627, $PACZKI_ID);
        $this->importPackage(5581, $PACZKI_ID);
        $this->importPackage(5582, $PACZKI_ID);
        $this->importPackage(5674, $PACZKI_ID);
        $this->importPackage(5830, $PACZKI_ID);
        $this->importPackage(6243, $PACZKI_ID);
        $this->importPackage(6244, $PACZKI_ID);
        $this->importPackage(6245, $PACZKI_ID);
        $this->importPackage(6246, $PACZKI_ID);
        $this->importPackage(6247, $PACZKI_ID);
        $this->importPackage(6248, $PACZKI_ID);
    }

    private function importPackage($id, $parentId)
    {
        $res = $this->httpClient->request("GET", "http://10.10.100.1/api/v1/product/export/$id")->toArray();

        $newId = $this->addPackage($res, $parentId);
        foreach ($res['Children'] as $childId) {
            $this->importPackage($childId, $newId);

            \Pimcore::collectGarbage();
        }
    }

    private function addPackage($data, $parentId, $verbose = false) : int
    {
        $mm = Unit::getByAbbreviation("mm");
        $kg = Unit::getByAbbreviation("kg");

        $parent = DataObject::getById($parentId);
        $path = $parent->getPath() . $parent->getKey() . "/" . $data['key'];

        $curr = DataObject::getByPath($path);
        if($curr)
        {
            if($verbose)
            {
                $this->writeComment("[~] Skipping " . $data['key'] . " (" . $curr->getId() . ").");
            }
            return $curr->getId();
        }

        $package = new Package();
        $package->setParentId($parentId);
        $package->setKey($data['key']);

        $package->setObjectType($data['ObjectType']);

        if($data['Model'])
            $package->setModel($data['Model']);

        if($data['Mass'])
            $package->setMass(new QuantityValue($data['Mass'], $kg));

        if($data['Width'])
            $package->setWidth(new QuantityValue($data['Width'], $mm));

        if($data['Height'])
            $package->setHeight(new QuantityValue($data['Height'], $mm));

        if($data['Depth'])
            $package->setDepth(new QuantityValue($data['Depth'], $mm));

        if($data['MirjanCode'])
        {
            $brick = new DataObject\Objectbrick\Data\IndexMirjan24($package);
            $brick->setCode($data['MirjanCode']);
            $package->getCodes()->setIndexMirjan24($brick);
        }

        $package->save();

        $this->writeInfo('[+] ' . $data['key']);

        return $package->getId();
    }

    private function getProducts($productsFolderPath, $productsAssetPath, $collectionFolderPath)
    {
        $this->addFolderPath($productsFolderPath);
        $PRODUKTY_FOLDER = DataObject\Folder::getByPath($productsFolderPath);

        $this->addFolderPath($productsAssetPath, "ASSET");
        $IMAGE_FOLDER = Asset\Folder::getByPath($productsAssetPath);

        $this->writeInfo("[Products]");

        $this->importProducts(6249, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // BLAT
        $this->importProducts(6250, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // REGAL
        $this->importProducts(6251, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // FRONT
        $this->importProducts(6252, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // KOMODA
        $this->importProducts(6253, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // KOMODA Z KOMINKIEM
        $this->importProducts(6254, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // LUSTRO
        $this->importProducts(6255, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // WITRYNA
        $this->importProducts(6256, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // SZAFKA ŁAZIENKOWA
        $this->importProducts(6257, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // SZAFKA UMYWALKOWA
        $this->importProducts(6258, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // STOLIK KAWOWY
        $this->importProducts(6259, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // SZAFKA NOCNA
        $this->importProducts(6334, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // RTV
        $this->importProducts(6261, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // RTV Z KOMINKIEM
        $this->importProducts(6262, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // RTV z SOUNDBAREM
        $this->importProducts(455, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // ALA-300
        $this->importProducts(456, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // ALA-400
        $this->importProducts(457, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // ALA-600
        $this->importProducts(458, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // ALA-800
        $this->importProducts(6269, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // KOMINEK ELEKTRYCZNY
        $this->importProducts(6267, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // SOUNDBAR
        $this->importProducts(6271, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // STELAŻ
        $this->importProducts(6263, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // BATERIA UMYWALKOWA
        $this->importProducts(6264, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // KOREK DO UMYWALKI
        $this->importProducts(6266, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // LUSTRO
        $this->importProducts(6265, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $collectionFolderPath); // UMYWALKA
    }

    private function getSuspendedProducts($PRODUKTY_PATH, $PRODUKTY_ASSET_PATH, $COLLECTION_FOLDER)
    {
        $this->addFolderPath($PRODUKTY_PATH);
        $PRODUKTY_FOLDER = DataObject\Folder::getByPath($PRODUKTY_PATH);

        $this->addFolderPath($PRODUKTY_ASSET_PATH, "ASSET");
        $IMAGE_FOLDER = Asset\Folder::getByPath($PRODUKTY_ASSET_PATH);

        $this->writeInfo("[Suspended products]");

        $this->importProducts(1194, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1195, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1196, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1197, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1198, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1199, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1200, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1201, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1202, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1206, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1207, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1208, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1209, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1210, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1211, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1235, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1236, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1237, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1238, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1239, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1240, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1241, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1242, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1243, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1244, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1245, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1246, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1247, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1251, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1252, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1253, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1254, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1255, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1256, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1257, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1258, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1260, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1261, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1262, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1263, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1264, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1265, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1266, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1270, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1271, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1272, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1273, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1274, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1275, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1280, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1281, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1283, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1290, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1291, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1292, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1298, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1299, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1300, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1301, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1302, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1303, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1316, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
        $this->importProducts(1318, $PRODUKTY_FOLDER, $IMAGE_FOLDER, $COLLECTION_FOLDER);
    }

    private function importProducts($id, $parent, $imageFolder, $COLLECTION_FOLDER)
    {
        \Pimcore::collectGarbage();
        $res = $this->httpClient->request("GET", "http://10.10.100.1/api/v1/product/export/$id")->toArray();

        $newParent = $this->addProduct($res, $parent, $imageFolder, $COLLECTION_FOLDER);
        foreach ($res['Children'] as $childId) {
            \Pimcore::collectGarbage();
            $this->importProducts($childId, $newParent, $imageFolder, $COLLECTION_FOLDER);
        }
    }

    private function addProduct($data, $parent, $imageFolder, $COLLECTION_FOLDER, $verbose = false) : Product
    {
        \Pimcore::collectGarbage();
        DataObject::setHideUnpublished(false);

        $path = $parent->getPath() . $parent->getKey() . "/" . $data['key'];

        $curr = Product::getByPath($path);
        if($curr)
        {
            if($verbose)
            {
                $this->writeComment("[~] Skipping " . $data['key'] . " (" . $curr->getId() . ").");
            }
            return $curr;
        }

        $kg = Unit::getById('kg');
        $mm = Unit::getById('mm');
        $pln = Unit::getById('PLN');

        $prod = new Product();
        $prod->setKey($data['key']);
        $prod->setParent($parent);

        if($data['ObjectType'])
            $prod->setObjectType($data['ObjectType']);

        if($data['EAN'])
            $prod->setEan($data['EAN']);

        if($data['Name'])
        {
            foreach ($data['Name'] as $loc => $name)
            {
                $prod->setName($name, $loc);
            }
        }

        if($data['Model'])
            $prod->setModel($data['Model']);

        if($data['Mass'])
            $prod->setMass(new QuantityValue($data['Mass'], $kg));

        if($data['Width'])
            $prod->setWidth(new QuantityValue($data['Width'], $mm));

        if($data['Height'])
            $prod->setHeight(new QuantityValue($data['Height'], $mm));

        if($data['Depth'])
            $prod->setDepth(new QuantityValue($data['Depth'], $mm));

        if($data['BasePrice'])
            $prod->setBasePrice(new QuantityValue($data['BasePrice'], $pln));

        if($data['Packages'])
        {
            $refs = [];

            foreach($data['Packages'] as $packageKey => $qty)
            {
                $package = $this->findDataObjectByKey($packageKey);

                if(!$package)
                    throw new \Exception("Package $packageKey not found");

                $lineItem = new DataObject\Data\ObjectMetadata('Packages', ['Quantity'], $package);
                $lineItem->setQuantity($qty);

                $refs[] = $lineItem;
            }

            $prod->setPackages($refs);
        }

        $FILES_FOLDER_PATH = "/PRODUKTY/PLIKI";
        $this->addFolderPath($FILES_FOLDER_PATH, "ASSET");
        $filesFolder = Asset\Folder::getByPath($FILES_FOLDER_PATH);

        $docs = [];

        if($data['AssemblyGuide'])
        {
            $fileURL = $data['AssemblyGuide'];

            $fileName = explode("/", $fileURL);
            $fileName = str_replace("%", "_", $fileName[count($fileName) - 1]);

            $f = Asset\Document::getByPath($filesFolder->getPath() . $filesFolder->getKey() . "/" . $fileName);
            if($f)
            {
                $docs[] = $f;
            }
            else
            {
                $f = new \Pimcore\Model\Asset\Document();
                $f->setFilename($fileName);
                $f->setData(file_get_contents($fileURL));
                $f->setParent($filesFolder);
                $f->save();

                $docs[] = $f;
            }
        }

        if($data['Manual'])
        {
            $fileURL = $data['Manual'];

            $fileName = explode("/", $fileURL);
            $fileName = str_replace("%", "_", $fileName[count($fileName) - 1]);

            $f = Asset\Document::getByPath($filesFolder->getPath() . $filesFolder->getKey() . "/" . $fileName);
            if($f)
            {
                $docs[] = $f;
            }
            else
            {
                $f = new \Pimcore\Model\Asset\Document();
                $f->setFilename($fileName);
                $f->setData(file_get_contents($fileURL));
                $f->setParent($filesFolder);
                $f->save();

                $docs[] = $f;
            }
        }

        if($docs)
        {
            $prod->setDocuments($docs);
        }

        if($data['Image'])
        {
            $fileURL = $data['Image'];

            $fileName = explode("/", $fileURL);
            $fileName = str_replace("%", "_", $fileName[count($fileName) - 1]);

            $img = Asset\Image::getByPath($imageFolder->getPath() . $imageFolder->getKey() . "/" . $fileName);
            if($img)
            {
                $prod->setImage($img);
            }
            else
            {
                $im = new \Pimcore\Model\Asset\Image();
                $im->setFilename($fileName);
                $im->setData(file_get_contents($fileURL));
                $im->setParent($imageFolder);
                $im->save();

                $prod->setImage($im);
            }
        }

        if($data['Images'])
        {
            $images = $this->addGallery($data['Images'], $imageFolder);
            $prod->setImages(new DataObject\Data\ImageGallery($images));
        }

        if($data['Photos'])
        {
            $images = $this->addGallery($data['Photos'], $imageFolder);
            $prod->setPhotos(new DataObject\Data\ImageGallery($images));
        }

        $images = [];

        if($data['ImagesModel'])
        {
            $images = $this->addGallery($data['ImagesModel'], $imageFolder);
            $prod->setImagesModel(new DataObject\Data\ImageGallery($images));
        }

        $gallery = new DataObject\Data\ImageGallery($images);
        $prod->setImagesModel($gallery);

        if($data['Summary'])
            $prod->setSummary($data['Summary'], "pl");

        $collName = explode("-", $prod->getKey())[0];

        $coll = DataObject::getByPath($COLLECTION_FOLDER . "/" . $collName);

        if($coll && count($prod->getGroups()) == 0)
        {
            $prod->setGroups([$coll]);
        }


        if($data['Parameters'])
        {
            $activeGroups = [];
            foreach($data['Parameters'] as $group => $groupData)
            {
                $activeGroups[$this->groupId[$group]] = true;
            }


            $prod->getParameters()->setActiveGroups($activeGroups);

            foreach($data['Parameters'] as $groupId => $groupData)
            {
                foreach($groupData as $keyId => $values)
                {
                    $valuesNoPl = $values;
                    if(is_array($valuesNoPl))
                    {
                        /** @var array $valuesNoPl */
                        for($i=0; $i<count($valuesNoPl); $i++)
                        {
                            $valuesNoPl[$i] = $this->removePolishDiacritics($valuesNoPl[$i]);
                        }
                    }
                    else
                    {
                        $valuesNoPl = $this->removePolishDiacritics($valuesNoPl);
                    }

                    $prod->getParameters()->setLocalizedKeyValue($this->groupId[$groupId], $this->keyId[$keyId], $valuesNoPl, 'default');
                }
            }
        }



        $prod->save();

        $this->writeInfo('[+] ' . $data['key']);

        return $prod;
    }

    private function getSets($setFolderPath, $setFolderAssetPath, $collectionFolderPath)
    {
        $this->addFolderPath($setFolderPath);
        $FOLDER = DataObject\Folder::getByPath($setFolderPath);

        $this->addFolderPath($setFolderAssetPath, "ASSET");
        $IMAGE_FOLDER = Asset\Folder::getByPath($setFolderAssetPath);

        $this->writeInfo("[Sets]");

        $this->importSets(6270, $FOLDER, $IMAGE_FOLDER, $collectionFolderPath);
    }

    private function importSets($id, $folder, $imageFolder, $collectionFolder)
    {
        \Pimcore::collectGarbage();
        $res = $this->httpClient->request("GET", "http://10.10.100.1/api/v1/product/export/$id")->toArray();

        $newParent = $this->addSet($res, $folder, $imageFolder, $collectionFolder);
        foreach ($res['Children'] as $childId) {
            $this->importSets($childId, $newParent, $imageFolder, $collectionFolder);
        }
    }

    private function addSet($data, $parent, $imageFolder, $collectionFolder, $verbose = false) : ProductSet
    {
        DataObject::setHideUnpublished(false);

        $path = $parent->getPath() . $parent->getKey() . "/" . $data['key'];

        $curr = ProductSet::getByPath($path);
        if($curr)
        {
            if($verbose)
            {
                $this->writeComment("[~] Skipping " . $data['key'] . " (" . $curr->getId() . ").");
            }
            return $curr;
        }

        $set = new ProductSet();
        $set->setKey($data['key']);
        $set->setParent($parent);

        if($data['EAN'])
            $set->setEan($data['EAN']);

        if($data['Name'])
        {
            foreach ($data['Name'] as $loc => $name)
            {
                $set->setName($name, $loc);
            }
        }

        if($data['Image'])
        {
            $imurl = $data['Image'];

            $imname = explode("/", $imurl);
            $imname = str_replace("%", "_", $imname[count($imname) - 1]);

            $img = Asset\Image::getByPath($imageFolder . "/" . $imname);
            if($img)
            {
                $set->setImage($img);
            }
            else
            {
                $im = new \Pimcore\Model\Asset\Image();
                $im->setFilename($imname);
                $im->setData(file_get_contents($imurl));
                $im->setParent($imageFolder);
                $im->save();

                $set->setImage($im);
            }
        }

        if($data['Images'])
        {
            $images = $this->addGallery($data['Images'], $imageFolder);
            $gallery = new DataObject\Data\ImageGallery($images);
            $set->setImages($gallery);
        }

        if($data['ImagesModel'])
        {
            $images = $this->addGallery($data['ImagesModel'], $imageFolder);
            $gallery = new DataObject\Data\ImageGallery($images);
            $set->setImagesModel($gallery);
        }

        if($data['Set'])
        {
            $refs = [];

            foreach($data['Set'] as $productKey => $qty)
            {
                $product = $this->findDataObjectByKey($productKey);

                if(!$product)
                    throw new \Exception("Product $productKey not found");

                $lineItem = new DataObject\Data\ObjectMetadata('Set', ['Quantity'], $product);
                $lineItem->setQuantity($qty);

                $refs[] = $lineItem;
            }

            $set->setSet($refs);
        }

        $collName = explode("-", $set->getKey())[0];

        $coll = DataObject::getByPath($collectionFolder . "/" . $collName);

        if($coll && count($set->getGroups()) == 0)
        {
            $set->setGroups([$coll]);
        }

        $set->save();

        $this->writeInfo('[+] ' . $data['key']);

        return $set;
    }

    private function addFolderPath($path, $kind = "DAO")
    {
        $parts = explode("/", $path);
        $currentPath = "";
        $currentParentId = 1;

        for($i = 0; $i < count($parts); $i++)
        {
            $currentPath .= "/" . $parts[$i];

            if($kind == "DAO")
            {
                $c = DataObject::getByPath($currentPath);
                if($c == null)
                {
                    $crumb = new DataObject\Folder();
                    $crumb->setParentId($currentParentId);
                    $crumb->setKey($parts[$i]);
                    $crumb->save();
                    $this->writeInfo("[+] $currentPath");
                    $currentParentId = $crumb->getId();
                }
                else
                {
                    $currentParentId = $c->getId();
                }
            }
            elseif($kind == "ASSET")
            {
                $c = Asset::getByPath($currentPath);
                if ($c == null)
                {
                    $crumb = new Asset\Folder();
                    $crumb->setParentId($currentParentId);
                    $crumb->setKey($parts[$i]);
                    $crumb->save();
                    $this->writeInfo("[+] $currentPath");
                    $currentParentId = $crumb->getId();
                }
                else
                {
                    $currentParentId = $c->getId();
                }
            }
            else
            {
                throw new Exception(("Unknown kind " . $kind));
            }
        }
    }

    private function addGallery($imageURLs, $folder) : array
    {
        $images = [];

        foreach ($imageURLs as $imurl)
        {
            if($imurl)
            {
                $imname = explode("/", $imurl);
                $imname = str_replace("%", "_", $imname[count($imname) - 1]);

                $img = Asset\Image::getByPath($folder . "/" . $imname);
                if($img)
                {
                    $hs = new DataObject\Data\Hotspotimage($img);
                    $images[] = $hs;
                }
                else
                {
                    $im = new \Pimcore\Model\Asset\Image();
                    $im->setFilename($imname);
                    $im->setData(file_get_contents($imurl));
                    $im->setParent($folder);
                    $im->save();

                    $hs = new DataObject\Data\Hotspotimage($img);
                    $images[] = $hs;
                }
            }
        }

        return $images;
    }

    private function getOrders($ordersFolderPath, $orderFilesFolderPath, $usersPath)
    {
        DataObject::setHideUnpublished(false);

        $this->addFolderPath($ordersFolderPath);
        $FOLDER = DataObject\Folder::getByPath($ordersFolderPath);

        $this->addFolderPath($orderFilesFolderPath, "ASSET");
        $FILES_FOLDER = Asset\Folder::getByPath($orderFilesFolderPath);

        $this->addFolderPath($usersPath);
        $FOLDER_USERS = DataObject\Folder::getByPath($usersPath);

        $data = $this->httpClient->request("GET", "http://10.10.100.1/api/order/export")->toArray();

        foreach($data as $orderKey => $orderData)
        {
            $o = new Order();
            $o->setKey($orderKey);
            $o->setParent($FOLDER);
            $o->setDate(new Carbon($orderData['DueDate']));
            $o->setDone($orderData['Done']);

            $o->save();
            $this->writeInfo("[+] $orderKey");

            foreach($orderData['Series'] as $serieKey => $serieData)
            {
                $s = new Order();
                $s->setKey($serieKey);
                $s->setParent($o);
                $s->setDone($serieData['Done']);
                $s->setDate(new Carbon($serieData['DueDate']));

                if($serieData['User'])
                {
                    $u = User::getByPath($FOLDER_USERS->getPath() . "/" . $FOLDER_USERS->getKey() . "/" . $serieData['User']);
                    if(!$u)
                    {
                        $u = new DataObject\User();
                        $u->setKey($serieData['User']);
                        $u->setParent($FOLDER_USERS);
                        $u->save();
                    }

                    $s->setUser($u);
                }

                if($serieData['Files'])
                {
                    foreach($serieData['Files'] as $fileURL)
                    {
                        $fileName = explode("/", $fileURL);
                        $fileName = str_replace("%", "_", $fileName[count($fileName) - 1]);

                        $f = Asset\Document::getByPath($FILES_FOLDER->getPath() . $FILES_FOLDER->getKey() . "/" . $fileName);
                        if($f)
                        {
                            $s->setAttachments([$f]);
                        }
                        else
                        {
                            $f = new \Pimcore\Model\Asset\Document();
                            $f->setFilename($fileName);
                            $f->setData(file_get_contents($fileURL));
                            $f->setParent($FILES_FOLDER);
                            $f->save();

                            $s->setAttachments([$f]);
                        }
                    }
                }

                $items = [];
                foreach ($serieData['Products'] as $productKey => $quantity)
                {
                    $product = $this->findDataObjectByKey($productKey);

                    $rowItem = new DataObject\Data\ObjectMetadata('Products', ['Quantity', 'QuantityDone'], $product);
                    $rowItem->setQuantity($quantity['Quantity']);
                    $rowItem->setQuantityDone($quantity['Done']);

                    $items[] = $rowItem;
                }

                $s->setProducts($items);
                $s->save();

                $this->writeInfo("[+] \t$serieKey");
            }
        }
    }

    /**
     * Recursively searches for a DataObject object by key.
     *
     * @param string $key The key of the DataObject.
     * @return DataObject|null The found DataObject object or null.
     */
    function findDataObjectByKey(string $key): ?DataObject
    {
        $list = new \Pimcore\Model\DataObject\Listing();
        $list->setCondition("`key` = ?", [$key]);
        $list->setLimit(1);

        $products = $list->load();
        return $products[0] ?? null;
    }

    function removePolishDiacritics(string|bool $data): string|bool {

        if(is_bool($data))
            return $data;

        $map = [
            'ą' => 'a', 'ć' => 'c', 'ę' => 'e', 'ł' => 'l',
            'ń' => 'n', 'ó' => 'o', 'ś' => 's', 'ż' => 'z', 'ź' => 'z',
            'Ą' => 'A', 'Ć' => 'C', 'Ę' => 'E', 'Ł' => 'L',
            'Ń' => 'N', 'Ó' => 'O', 'Ś' => 'S', 'Ż' => 'Z', 'Ź' => 'Z',
        ];

        return strtr($data, $map);
    }
}
